{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mateu\\\\Desktop\\\\OGNIK\\\\Ognik\\\\frontend\\\\src\\\\components\\\\ConControls.js\",\n  _s = $RefreshSig$();\nimport { React, useEffect, useContext, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport CallIcon from \"../assets/phone-call.png\";\nimport CameraIcon from \"../assets/camera.png\";\nimport MicIcon from \"../assets/mic.png\";\nimport PhoneIcon from \"../assets/phone.png\";\nimport AuthContext from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isFirstCall = true;\nlet localStream;\nlet remoteStream;\nlet peerConnection;\nlet count = 1;\nlet isVisible = false;\nlet is_in_call = false;\nlet friend_call = \"none\";\nlet sender;\nconst ConControls = _ref => {\n  _s();\n  let {\n    calling,\n    isCalling,\n    data = null,\n    fcall\n  } = _ref;\n  // Getting username from URL\n  let {\n    username\n  } = useParams();\n  let string = username.toString();\n\n  // const [isVisible, setIsVisible] = useState(false);\n\n  // Getting access to authToken and WebSocket info from AuthContext\n  let {\n    WebSocket,\n    authToken,\n    user\n  } = useContext(AuthContext);\n\n  // !!! prop for sending ice can using webSockets !!!\n\n  // WebSocket.send(JSON.stringify({\n  //     'message': 'message was sent',\n  //     'friendName': string,\n  //     'type': 'init_call',\n  // }))\n\n  const servers = {\n    iceServers: [{\n      urls: ['stun:stun.l.google.com:19302', 'stun:stun2.l.google.com:19302']\n    }]\n  };\n  let setup_ui = async () => {\n    console.log(\"test1\");\n    // Getting UI element    \n    // let callBTN = document.getElementById(\"call-controls\");\n    let button = document.getElementById(\"ConControls-Call-icon\");\n    button.style.visibility = \"hidden\";\n    // Getting chat element\n    let chat = document.getElementsByClassName(\"message_container_chat\")[0];\n    let message_list = document.getElementsByClassName(\"message_list\")[0];\n\n    // Getting video elemnt\n    let user1 = document.getElementById('user-1');\n    let user2 = document.getElementById('user-2');\n\n    // Getting permisson from the user\n    localStream = await navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }); // getting problem here\n\n    console.log('test2');\n    let video_container = document.getElementById(\"video_container\");\n    video_container.style.display = \"grid\";\n\n    // Setting up video container style\n    // callBTN.style.display = 'visible';\n    user1.style.visibility = 'visible';\n    user1.style.height = \"100%\";\n    user2.style.visibility = 'visible';\n    user2.style.height = \"100%\";\n    isVisible = true;\n    // Setting up src stream for user 1\n    user1.srcObject = localStream;\n    user1.onloadedmetadata = function (e) {\n      user1.play();\n    };\n\n    // uiNav.style.height = \"50vh\";\n    // chat.style.height = \"45vh\";\n    message_list.style.height = \"50vh\";\n    is_in_call = true;\n  };\n\n  // Changing layout of website\n  let init_call = async () => {\n    friend_call = string;\n    setup_ui();\n    create_offer();\n\n    // alert(\"ended\");\n  };\n\n  let createPeerConnection = async () => {\n    // Creating connection object\n    peerConnection = new RTCPeerConnection(servers);\n\n    // Creating friend's stream object\n    remoteStream = new MediaStream();\n    // Setting html video object to friend's stream\n    document.getElementById('user-2').srcObject = remoteStream;\n    if (!localStream) {\n      localStream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      document.getElementById('user-1').srcObject = localStream;\n    }\n\n    // For every track, tracks are added to localStream (user's stream)\n    localStream.getTracks().forEach(track => {\n      peerConnection.addTrack(track, localStream);\n    });\n\n    // For every track from friend's peer connection, tracks are added to remoteStream (Friend's stream)\n    peerConnection.ontrack = e => {\n      e.streams[0].getTracks().forEach(track => {\n        remoteStream.addTrack(track);\n      });\n    };\n\n    // Debuging\n    peerConnection.onicecandidate = async e => {\n      if (e.candidate) {\n        // console.log('New ICE candidate: ', e.candidate)\n        WebSocket.send(JSON.stringify({\n          'message': e.candidate,\n          'friendName': string,\n          'type': 'candidate'\n        }));\n      }\n    };\n  };\n  let create_offer = async () => {\n    await createPeerConnection();\n    let offer = await peerConnection.createOffer();\n    // sets local descirpiton and also fires of peerConnection.onicecandidate listener\n    await peerConnection.setLocalDescription(offer);\n    const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n    await delay(200);\n    WebSocket.send(JSON.stringify({\n      'message': offer,\n      'friendName': string,\n      'type': 'init_call'\n    }));\n    // console.log('Offer: ', offer)\n    // console.log(peerConnection)\n  };\n\n  let create_answer = async offer => {\n    await createPeerConnection();\n    await peerConnection.setRemoteDescription(offer);\n    let answer = await peerConnection.createAnswer();\n    await peerConnection.setLocalDescription(answer);\n\n    // console.log(string)\n    console.log(\"asnwer: |\");\n    console.log(answer);\n    // creating delay to ensure that aswer is created before sending message\n    // if not first init of the call wont work :( (I have absolutely no idea how to fix this)\n    const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n    await delay(400);\n    WebSocket.send(JSON.stringify({\n      'message': answer,\n      'friendName': string,\n      'type': 'answer'\n    }));\n  };\n  let addAnswer = async answer => {\n    console.log(\"tests: \");\n    console.log(peerConnection);\n    if (!peerConnection.currentRemoteDescription) {\n      // console.log(peerConnection) // Here is problem. undefined\n      console.log(peerConnection.currentRemoteDescription);\n      // count++\n      await peerConnection.setRemoteDescription(answer);\n    }\n  };\n  let handleCallFromPeer = async data => {\n    // quick delay hack (not working in this case :( i hate life )\n    // const delay = ms => new Promise(\n    //     resolve => setTimeout(resolve, ms)\n    // );\n    // await delay(300)\n    if (data) {\n      // console.log(data)\n      // console.log(friend_call)\n      if (data.friend == string) {\n        console.log(data);\n      }\n      if (data.type == \"init_call\" && data.friend == string) {\n        friend_call = data.friend;\n        setup_ui();\n        // console.log(data.message)\n        create_answer(data.message);\n        console.log(\"create_answer\");\n        // console.log(data.message)\n        // console.log(data)\n      }\n\n      if (data.message.type === \"answer\" && data.friend == string) {\n        addAnswer(data.message);\n        console.log(\"add_answer\");\n        console.log(data.message);\n      }\n      if (data.type == \"candidate\" && data.friend == string) {\n        // creating delay hack to ensure that create_answer() sends answer object first via websocket\n        // possible fix:\n        // create system where peer has to accept call and this will ensure time buffer betweem adding Ice Candidates and receiving answer object\n        // answer object must be received before adding any Ice Candidates if not Ice Candidates on peer side will be added to null local description (that will throw error)\n        const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n        await delay(1000);\n        console.log(\"ice tests\");\n        if (peerConnection) {\n          console.log(peerConnection.remoteDescription);\n          peerConnection.addIceCandidate(data.message);\n          console.log(\"addIceCandidate\");\n        }\n      }\n      if (data.type == \"end_call\" && is_in_call && friend_call == data.friend) {\n        handleUserLeft();\n      }\n    }\n\n    // isCalling(false)\n  };\n\n  let handleUserLeft = async () => {\n    // closing peer connection\n\n    let uiNav = document.getElementsByClassName(\"ConControls\")[0];\n    // Getting chat element\n    let chat = document.getElementsByClassName(\"message_container_chat\")[0];\n    let message_list = document.getElementsByClassName(\"message_list\")[0];\n    uiNav.style.height = \"auto\";\n    chat.style.height = \"auto\";\n    message_list.style.height = \"85vh\";\n    console.log(\"zaczynam\");\n    let button = document.getElementById(\"ConControls-Call-icon\");\n    button.style.visibility = \"visible\";\n    console.log(\"skonczylem\");\n    let video_container = document.getElementById(\"video_container\");\n    video_container.style.display = \"none\";\n    let user1 = document.getElementById('user-1');\n    let user2 = document.getElementById('user-2');\n    user1.style.visibility = 'hidden';\n    user1.style.height = \"0%\";\n    user2.style.visibility = 'hidden';\n    user2.style.height = \"0%\";\n    isVisible = false;\n    is_in_call = false;\n\n    // localStream.getTracks().forEach((track) => {\n    //     track.stop();\n    // })\n\n    // For every track, tracks are added to localStream (user's stream)\n\n    // console.log(peerConnection.getSenders())\n    // peerConnection.removeTrack(peerConnection.getSenders()[0])\n\n    let videoTrack = localStream.getTracks().find(track => track.kind === 'video');\n    remoteStream.getTracks().forEach(track => {\n      console.log(track);\n      // track.stop();\n      remoteStream.removeTrack(track);\n    });\n    peerConnection.close();\n    // removeTrack()\n\n    WebSocket.send(JSON.stringify({\n      'message': 'end call',\n      'friendName': string,\n      'type': 'end_call'\n    }));\n  };\n  let toggle_camera = async () => {\n    let videoTrack = localStream.getTracks().find(track => track.kind === 'video');\n    if (videoTrack.enabled) {\n      videoTrack.enabled = false;\n      document.getElementById('camera_btn').style.backgroundColor = 'rgb(255, 80, 80)';\n    } else {\n      videoTrack.enabled = true;\n      document.getElementById('camera_btn').style.backgroundColor = 'rgb(102, 153, 255, .8)';\n    }\n  };\n  let toggle_audio = async () => {\n    let audioTrack = localStream.getTracks().find(track => track.kind === 'audio');\n    if (audioTrack.enabled) {\n      audioTrack.enabled = false;\n      document.getElementById('mic_btn').style.backgroundColor = 'rgb(255, 80, 80)';\n    } else {\n      audioTrack.enabled = true;\n      document.getElementById('mic_btn').style.backgroundColor = 'rgb(102, 153, 255, .8)';\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('beforeunload', handleUserLeft);\n    // if(is_in_call === true)\n    // {\n    //     init_call()\n    // }\n    // else\n    // {\n    //     // Getting UI element    \n    //     let uiNav = document.getElementsByClassName(\"ConControls\")[0];\n    //     // Getting chat element\n    //     let chat = document.getElementsByClassName(\"message_container_chat\")[0];\n    //     let message_list = document.getElementsByClassName(\"message_list\")[0];\n    //     uiNav.style.height = \"auto\";\n    //     chat.style.height = \"auto\";\n    //     message_list.style.height = \"85vh\";\n    // }\n    // // setup_ui()\n\n    // setIsVisible(false)\n  }, []);\n\n  // Logic for handling incoming call\n  // if (calling == true)\n  // {\n\n  // if (isFirstCall == true && fcall === true)\n  // {\n  //     isFirstCall = false\n  //     console.log(\"test\")\n  //     // setup_ui()\n  // } \n  // console.log(\"Your friend is calling right now!!!\")\n\n  // Debugging stuff:\n  // console.log(data.message.type)\n  handleCallFromPeer(data);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main_uivideo_con\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ConControls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"ConControls-friendname\",\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"ConControls-Call-icon\",\n        onClick: init_call,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: CallIcon,\n          alt: \"call\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 69\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video_container\",\n      id: \"video_container\",\n      hidden: true,\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        class: \"video-player\",\n        id: \"user-1\",\n        autoPlay: true,\n        playsInline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        class: \"video-player\",\n        id: \"user-2\",\n        autoPlay: true,\n        playsInline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isVisible ? 'visible' : 'hidden',\n      id: \"call_controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"control-container\",\n        id: \"camera_btn\",\n        onClick: toggle_camera,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: CameraIcon,\n          alt: \"camera_btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"control-container\",\n        id: \"mic_btn\",\n        onClick: toggle_audio,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: MicIcon,\n          alt: \"microphone_btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"control-container\",\n        id: \"leave_btn\",\n        onClick: handleUserLeft,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: PhoneIcon,\n          alt: \"leave_btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 390,\n    columnNumber: 9\n  }, this);\n};\n_s(ConControls, \"wRsBUVphty9jsNXoUi8lWZzvOqQ=\", false, function () {\n  return [useParams];\n});\n_c = ConControls;\nexport default ConControls;\nvar _c;\n$RefreshReg$(_c, \"ConControls\");","map":{"version":3,"names":["React","useEffect","useContext","useState","useParams","CallIcon","CameraIcon","MicIcon","PhoneIcon","AuthContext","isFirstCall","localStream","remoteStream","peerConnection","count","isVisible","is_in_call","friend_call","sender","ConControls","calling","isCalling","data","fcall","username","string","toString","WebSocket","authToken","user","servers","iceServers","urls","setup_ui","console","log","button","document","getElementById","style","visibility","chat","getElementsByClassName","message_list","user1","user2","navigator","mediaDevices","getUserMedia","video","audio","video_container","display","height","srcObject","onloadedmetadata","e","play","init_call","create_offer","createPeerConnection","RTCPeerConnection","MediaStream","getTracks","forEach","track","addTrack","ontrack","streams","onicecandidate","candidate","send","JSON","stringify","offer","createOffer","setLocalDescription","delay","ms","Promise","resolve","setTimeout","create_answer","setRemoteDescription","answer","createAnswer","addAnswer","currentRemoteDescription","handleCallFromPeer","friend","type","message","remoteDescription","addIceCandidate","handleUserLeft","uiNav","videoTrack","find","kind","removeTrack","close","toggle_camera","enabled","backgroundColor","toggle_audio","audioTrack","window","addEventListener"],"sources":["C:/Users/mateu/Desktop/OGNIK/Ognik/frontend/src/components/ConControls.js"],"sourcesContent":["import {React, useEffect, useContext, useState} from 'react'\r\nimport {  useParams } from \"react-router-dom\";\r\nimport CallIcon from \"../assets/phone-call.png\"\r\nimport CameraIcon from \"../assets/camera.png\"\r\nimport MicIcon from \"../assets/mic.png\"\r\nimport PhoneIcon from \"../assets/phone.png\"\r\nimport AuthContext from '../context/AuthContext'\r\n\r\nlet isFirstCall = true\r\nlet localStream;\r\nlet remoteStream;\r\nlet peerConnection\r\nlet count = 1\r\nlet isVisible = false\r\nlet is_in_call = false;\r\nlet friend_call = \"none\"\r\nlet sender\r\n\r\nconst ConControls = ({calling, isCalling, data = null, fcall}) => {\r\n    // Getting username from URL\r\n    let { username } = useParams();\r\n    let string = username.toString();\r\n\r\n    // const [isVisible, setIsVisible] = useState(false);\r\n\r\n    // Getting access to authToken and WebSocket info from AuthContext\r\n    let { WebSocket, authToken, user} = useContext(AuthContext)\r\n\r\n    // !!! prop for sending ice can using webSockets !!!\r\n    \r\n    // WebSocket.send(JSON.stringify({\r\n    //     'message': 'message was sent',\r\n    //     'friendName': string,\r\n    //     'type': 'init_call',\r\n    // }))\r\n\r\n\r\n\r\n    const servers = \r\n    {\r\n        iceServers:[\r\n            {\r\n                urls:['stun:stun.l.google.com:19302', 'stun:stun2.l.google.com:19302']\r\n            }\r\n        ]\r\n    } \r\n    \r\n\r\n    let setup_ui = async () => {\r\n        console.log(\"test1\")\r\n        // Getting UI element    \r\n        // let callBTN = document.getElementById(\"call-controls\");\r\n        let button = document.getElementById(\"ConControls-Call-icon\");\r\n        button.style.visibility = \"hidden\";\r\n        // Getting chat element\r\n        let chat = document.getElementsByClassName(\"message_container_chat\")[0];\r\n        let message_list = document.getElementsByClassName(\"message_list\")[0];\r\n        \r\n        // Getting video elemnt\r\n        let user1 = document.getElementById('user-1');\r\n        let user2 = document.getElementById('user-2');\r\n\r\n        // Getting permisson from the user\r\n        localStream = await navigator.mediaDevices.getUserMedia({video: true, audio: true}); // getting problem here\r\n\r\n        console.log('test2')\r\n\r\n        let video_container = document.getElementById(\"video_container\");\r\n        video_container.style.display = \"grid\"\r\n\r\n        // Setting up video container style\r\n        // callBTN.style.display = 'visible';\r\n        user1.style.visibility = 'visible';\r\n        user1.style.height = \"100%\";\r\n        user2.style.visibility = 'visible';\r\n        user2.style.height = \"100%\";\r\n        isVisible = true\r\n        // Setting up src stream for user 1\r\n        user1.srcObject = localStream;\r\n        \r\n        user1.onloadedmetadata = function(e) {\r\n            user1.play();\r\n        };\r\n\r\n        // uiNav.style.height = \"50vh\";\r\n        // chat.style.height = \"45vh\";\r\n        message_list.style.height = \"50vh\";\r\n\r\n        is_in_call = true;\r\n    }\r\n\r\n    // Changing layout of website\r\n    let init_call = async () =>\r\n    {\r\n        friend_call = string\r\n        setup_ui()\r\n\r\n        create_offer()\r\n        \r\n        // alert(\"ended\");\r\n    }\r\n\r\n    let createPeerConnection = async () => {\r\n        // Creating connection object\r\n        peerConnection = new RTCPeerConnection(servers)\r\n\r\n        // Creating friend's stream object\r\n        remoteStream = new MediaStream()\r\n        // Setting html video object to friend's stream\r\n        document.getElementById('user-2').srcObject = remoteStream;\r\n\r\n        if(!localStream){\r\n            localStream = await navigator.mediaDevices.getUserMedia({video:true, audio:true})\r\n            document.getElementById('user-1').srcObject = localStream\r\n        }\r\n\r\n        // For every track, tracks are added to localStream (user's stream)\r\n        localStream.getTracks().forEach((track) => {\r\n            peerConnection.addTrack(track, localStream)\r\n        })\r\n\r\n        // For every track from friend's peer connection, tracks are added to remoteStream (Friend's stream)\r\n        peerConnection.ontrack = (e) => {\r\n            e.streams[0].getTracks().forEach((track) => {\r\n                remoteStream.addTrack(track)\r\n            })\r\n        }\r\n\r\n        // Debuging\r\n        peerConnection.onicecandidate = async (e) => {\r\n            if(e.candidate){\r\n                // console.log('New ICE candidate: ', e.candidate)\r\n                WebSocket.send(JSON.stringify({\r\n                    'message': e.candidate,\r\n                    'friendName': string,\r\n                    'type': 'candidate',\r\n                }))\r\n            }\r\n        }\r\n    }\r\n\r\n    let create_offer = async () => \r\n    {\r\n        await createPeerConnection()\r\n\r\n        let offer = await peerConnection.createOffer()\r\n        // sets local descirpiton and also fires of peerConnection.onicecandidate listener\r\n        await peerConnection.setLocalDescription(offer)\r\n\r\n        const delay = ms => new Promise(\r\n            resolve => setTimeout(resolve, ms)\r\n        );\r\n        await delay(200)\r\n\r\n        WebSocket.send(JSON.stringify({\r\n            'message': offer,\r\n            'friendName': string,\r\n            'type': 'init_call',\r\n        }))\r\n        // console.log('Offer: ', offer)\r\n        // console.log(peerConnection)\r\n    }\r\n\r\n    let create_answer = async (offer) => {\r\n        await createPeerConnection()\r\n\r\n        await peerConnection.setRemoteDescription(offer)\r\n\r\n        let answer = await peerConnection.createAnswer()\r\n        await peerConnection.setLocalDescription(answer)\r\n\r\n        // console.log(string)\r\n        console.log(\"asnwer: |\")\r\n        console.log(answer)\r\n        // creating delay to ensure that aswer is created before sending message\r\n        // if not first init of the call wont work :( (I have absolutely no idea how to fix this)\r\n        const delay = ms => new Promise(\r\n            resolve => setTimeout(resolve, ms)\r\n        );\r\n        await delay(400)\r\n        WebSocket.send(JSON.stringify({\r\n            'message': answer,\r\n            'friendName': string,\r\n            'type': 'answer',\r\n        }))\r\n\r\n    }\r\n\r\n    let addAnswer = async (answer) => {\r\n        console.log(\"tests: \")\r\n        console.log(peerConnection)\r\n        if (!peerConnection.currentRemoteDescription) {\r\n            // console.log(peerConnection) // Here is problem. undefined\r\n            console.log(peerConnection.currentRemoteDescription)\r\n            // count++\r\n            await peerConnection.setRemoteDescription(answer);\r\n        }\r\n      };\r\n\r\n    let handleCallFromPeer = async (data) => {\r\n        // quick delay hack (not working in this case :( i hate life )\r\n        // const delay = ms => new Promise(\r\n        //     resolve => setTimeout(resolve, ms)\r\n        // );\r\n        // await delay(300)\r\n        if (data)\r\n        {\r\n            // console.log(data)\r\n            // console.log(friend_call)\r\n            if (data.friend == string)\r\n            {\r\n                console.log(data)\r\n            }\r\n            if (data.type == \"init_call\" && data.friend == string)\r\n            {\r\n                friend_call = data.friend\r\n                setup_ui()\r\n                // console.log(data.message)\r\n                create_answer(data.message)\r\n                console.log(\"create_answer\")\r\n                // console.log(data.message)\r\n                // console.log(data)\r\n            }\r\n            \r\n            if (data.message.type === \"answer\" && data.friend == string)\r\n            {\r\n                addAnswer(data.message)\r\n                console.log(\"add_answer\")\r\n                console.log(data.message)\r\n            }\r\n            \r\n            if (data.type == \"candidate\" && data.friend == string)\r\n            {\r\n                // creating delay hack to ensure that create_answer() sends answer object first via websocket\r\n                // possible fix:\r\n                // create system where peer has to accept call and this will ensure time buffer betweem adding Ice Candidates and receiving answer object\r\n                // answer object must be received before adding any Ice Candidates if not Ice Candidates on peer side will be added to null local description (that will throw error)\r\n                const delay = ms => new Promise(\r\n                    resolve => setTimeout(resolve, ms)\r\n                );\r\n                await delay(1000)\r\n                console.log(\"ice tests\")\r\n                if(peerConnection){\r\n                    console.log(peerConnection.remoteDescription)\r\n                    peerConnection.addIceCandidate(data.message)\r\n\r\n                    console.log(\"addIceCandidate\")\r\n                }\r\n            }\r\n\r\n            if (data.type == \"end_call\" && is_in_call && friend_call == data.friend)\r\n            {\r\n                handleUserLeft()\r\n            }\r\n        }\r\n\r\n        // isCalling(false)\r\n    }\r\n    \r\n    let handleUserLeft = async () => {\r\n        // closing peer connection\r\n        \r\n        let uiNav = document.getElementsByClassName(\"ConControls\")[0];\r\n        // Getting chat element\r\n        let chat = document.getElementsByClassName(\"message_container_chat\")[0];\r\n        let message_list = document.getElementsByClassName(\"message_list\")[0];\r\n        uiNav.style.height = \"auto\";\r\n        chat.style.height = \"auto\";\r\n        message_list.style.height = \"85vh\";\r\n        \r\n        console.log(\"zaczynam\")\r\n        let button = document.getElementById(\"ConControls-Call-icon\");\r\n        button.style.visibility = \"visible\";\r\n        console.log(\"skonczylem\")\r\n        \r\n        let video_container = document.getElementById(\"video_container\");\r\n        video_container.style.display = \"none\"\r\n        \r\n        let user1 = document.getElementById('user-1');\r\n        let user2 = document.getElementById('user-2');\r\n        \r\n        user1.style.visibility = 'hidden';\r\n        user1.style.height = \"0%\";\r\n        user2.style.visibility = 'hidden';\r\n        user2.style.height = \"0%\";\r\n        \r\n        isVisible = false\r\n        is_in_call = false\r\n        \r\n        \r\n        // localStream.getTracks().forEach((track) => {\r\n            //     track.stop();\r\n            // })\r\n\r\n        // For every track, tracks are added to localStream (user's stream)\r\n        \r\n    \r\n        // console.log(peerConnection.getSenders())\r\n        // peerConnection.removeTrack(peerConnection.getSenders()[0])\r\n\r\n        let videoTrack = localStream.getTracks().find(track => track.kind === 'video')\r\n        remoteStream.getTracks().forEach((track) => {\r\n            console.log(track)\r\n            // track.stop();\r\n            remoteStream.removeTrack(track)\r\n        })\r\n\r\n\r\n        peerConnection.close()\r\n        // removeTrack()\r\n        \r\n        WebSocket.send(JSON.stringify({\r\n            'message': 'end call',\r\n            'friendName': string,\r\n            'type': 'end_call',\r\n        }))\r\n    }\r\n\r\n    let toggle_camera = async () => {\r\n        let videoTrack = localStream.getTracks().find(track => track.kind === 'video')\r\n\r\n        if (videoTrack.enabled)\r\n        {\r\n            videoTrack.enabled = false\r\n            document.getElementById('camera_btn').style.backgroundColor = 'rgb(255, 80, 80)'\r\n        }\r\n        else\r\n        {\r\n            videoTrack.enabled = true\r\n            document.getElementById('camera_btn').style.backgroundColor = 'rgb(102, 153, 255, .8)'\r\n        }\r\n    }\r\n\r\n    let toggle_audio = async () => {\r\n        let audioTrack = localStream.getTracks().find(track => track.kind === 'audio')\r\n\r\n        if (audioTrack.enabled)\r\n        {\r\n            audioTrack.enabled = false\r\n            document.getElementById('mic_btn').style.backgroundColor = 'rgb(255, 80, 80)'\r\n        }\r\n        else\r\n        {\r\n            audioTrack.enabled = true\r\n            document.getElementById('mic_btn').style.backgroundColor = 'rgb(102, 153, 255, .8)'\r\n        }\r\n    }\r\n    \r\n    \r\n    useEffect(()=> {\r\n        window.addEventListener('beforeunload', handleUserLeft)\r\n        // if(is_in_call === true)\r\n        // {\r\n        //     init_call()\r\n        // }\r\n        // else\r\n        // {\r\n        //     // Getting UI element    \r\n        //     let uiNav = document.getElementsByClassName(\"ConControls\")[0];\r\n        //     // Getting chat element\r\n        //     let chat = document.getElementsByClassName(\"message_container_chat\")[0];\r\n        //     let message_list = document.getElementsByClassName(\"message_list\")[0];\r\n        //     uiNav.style.height = \"auto\";\r\n        //     chat.style.height = \"auto\";\r\n        //     message_list.style.height = \"85vh\";\r\n        // }\r\n        // // setup_ui()\r\n\r\n        // setIsVisible(false)\r\n    }, [])\r\n\r\n    // Logic for handling incoming call\r\n    // if (calling == true)\r\n    // {\r\n     \r\n        // if (isFirstCall == true && fcall === true)\r\n        // {\r\n        //     isFirstCall = false\r\n        //     console.log(\"test\")\r\n        //     // setup_ui()\r\n        // } \r\n        // console.log(\"Your friend is calling right now!!!\")\r\n        \r\n        // Debugging stuff:\r\n        // console.log(data.message.type)\r\n        handleCallFromPeer(data)\r\n    // }\r\n    \r\n    return (\r\n        <div className='main_uivideo_con'>\r\n            <div className='ConControls'>\r\n                <div id='ConControls-friendname'>{username}</div>\r\n                <div id='ConControls-Call-icon' onClick={init_call}><img src={CallIcon} alt=\"call\"/></div>\r\n            </div>\r\n            <div className='video_container' id='video_container' hidden>\r\n                <video class=\"video-player\" id='user-1' autoPlay playsInline ></video>\r\n                <video class=\"video-player\" id='user-2' autoPlay playsInline ></video>\r\n            </div>\r\n            <div className={isVisible ? 'visible' : 'hidden'} id='call_controls'>\r\n                <div class=\"control-container\" id=\"camera_btn\" onClick={toggle_camera}>\r\n                    <img src={CameraIcon} alt='camera_btn' />\r\n                </div>\r\n                <div class=\"control-container\" id=\"mic_btn\" onClick={toggle_audio}>\r\n                    <img src={MicIcon} alt='microphone_btn' />\r\n                </div>\r\n                <div class=\"control-container\" id=\"leave_btn\" onClick={handleUserLeft}>\r\n                    <img src={PhoneIcon} alt='leave_btn' />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConControls"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}