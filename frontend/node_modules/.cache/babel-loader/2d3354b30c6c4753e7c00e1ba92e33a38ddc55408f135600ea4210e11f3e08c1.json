{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mateu\\\\Desktop\\\\OGNIK\\\\Ognik\\\\frontend\\\\src\\\\components\\\\ConControls.js\",\n  _s = $RefreshSig$();\nimport { React, useEffect, useContext, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport CallIcon from \"../assets/phone-call.png\";\nimport CameraIcon from \"../assets/camera.png\";\nimport MicIcon from \"../assets/mic.png\";\nimport PhoneIcon from \"../assets/phone.png\";\nimport AuthContext from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isFirstCall = true;\nlet localStream;\nlet remoteStream;\nlet peerConnection;\nlet count = 1;\nconst ConControls = _ref => {\n  _s();\n  let {\n    calling,\n    isCalling,\n    data = null,\n    fcall\n  } = _ref;\n  // Getting username from URL\n  let {\n    username\n  } = useParams();\n  let string = username.toString();\n  const [isVisible, setIsVisible] = useState(false);\n\n  // Getting access to authToken and WebSocket info from AuthContext\n  let {\n    WebSocket,\n    authToken,\n    user\n  } = useContext(AuthContext);\n\n  // !!! prop for sending ice can using webSockets !!!\n\n  // WebSocket.send(JSON.stringify({\n  //     'message': 'message was sent',\n  //     'friendName': string,\n  //     'type': 'init_call',\n  // }))\n\n  let is_in_call = false;\n  const servers = {\n    iceServers: [{\n      urls: ['stun:stun.l.google.com:19302', 'stun:stun2.l.google.com:19302']\n    }]\n  };\n  let setup_ui = async () => {\n    console.log(\"test1\");\n    // Getting UI element    \n    // let callBTN = document.getElementById(\"call-controls\");\n    let button = document.getElementById(\"ConControls-Call-icon\");\n    button.style.visibility = \"hidden\";\n    // Getting chat element\n    let chat = document.getElementsByClassName(\"message_container_chat\")[0];\n    let message_list = document.getElementsByClassName(\"message_list\")[0];\n\n    // Getting video elemnt\n    let user1 = document.getElementById('user-1');\n    let user2 = document.getElementById('user-2');\n\n    // Getting permisson from the user\n    localStream = await navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }); // getting problem here\n\n    console.log('test2');\n    // Setting up video container style\n    // callBTN.style.display = 'visible';\n    user1.style.visibility = 'visible';\n    user1.style.height = \"100%\";\n    user2.style.visibility = 'visible';\n    user2.style.height = \"100%\";\n    setIsVisible(true);\n    // Setting up src stream for user 1\n    user1.srcObject = localStream;\n    user1.onloadedmetadata = function (e) {\n      user1.play();\n    };\n\n    // uiNav.style.height = \"50vh\";\n    // chat.style.height = \"45vh\";\n    message_list.style.height = \"50vh\";\n    is_in_call = true;\n  };\n\n  // Changing layout of website\n  let init_call = async () => {\n    setup_ui();\n    create_offer();\n\n    // alert(\"ended\");\n  };\n\n  let createPeerConnection = async () => {\n    // Creating connection object\n    peerConnection = new RTCPeerConnection(servers);\n\n    // Creating friend's stream object\n    remoteStream = new MediaStream();\n    // Setting html video object to friend's stream\n    document.getElementById('user-2').srcObject = remoteStream;\n    if (!localStream) {\n      localStream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: false\n      });\n      document.getElementById('user-1').srcObject = localStream;\n    }\n\n    // For every track, tracks are added to localStream (user's stream)\n    localStream.getTracks().forEach(track => {\n      peerConnection.addTrack(track, localStream);\n    });\n\n    // For every track from friend's peer connection, tracks are added to remoteStream (Friend's stream)\n    peerConnection.ontrack = e => {\n      e.streams[0].getTracks().forEach(track => {\n        remoteStream.addTrack(track);\n      });\n    };\n\n    // Debuging\n    peerConnection.onicecandidate = async e => {\n      if (e.candidate) {\n        // console.log('New ICE candidate: ', e.candidate)\n        WebSocket.send(JSON.stringify({\n          'message': e.candidate,\n          'friendName': string,\n          'type': 'candidate'\n        }));\n      }\n    };\n  };\n  let create_offer = async () => {\n    await createPeerConnection();\n    let offer = await peerConnection.createOffer();\n    // sets local descirpiton and also fires of peerConnection.onicecandidate listener\n    await peerConnection.setLocalDescription(offer);\n    const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n    await delay(200);\n    WebSocket.send(JSON.stringify({\n      'message': offer,\n      'friendName': string,\n      'type': 'init_call'\n    }));\n    // console.log('Offer: ', offer)\n    // console.log(peerConnection)\n  };\n\n  let create_answer = async offer => {\n    await createPeerConnection();\n    await peerConnection.setRemoteDescription(offer);\n    let answer = await peerConnection.createAnswer();\n    await peerConnection.setLocalDescription(answer);\n\n    // console.log(string)\n    console.log(\"asnwer: |\");\n    console.log(answer);\n    // creating delay to ensure that aswer is created before sending message\n    // if not first init of the call wont work :( (I have absolutely no idea how to fix this)\n    const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n    await delay(400);\n    WebSocket.send(JSON.stringify({\n      'message': answer,\n      'friendName': string,\n      'type': 'answer'\n    }));\n  };\n  let addAnswer = async answer => {\n    console.log(\"tests: \");\n    console.log(peerConnection);\n    if (!peerConnection.currentRemoteDescription) {\n      // console.log(peerConnection) // Here is problem. undefined\n      console.log(peerConnection.currentRemoteDescription);\n      // count++\n      await peerConnection.setRemoteDescription(answer);\n    }\n  };\n  let handleCallFromPeer = async data => {\n    // quick delay hack (not working in this case :( i hate life )\n    // const delay = ms => new Promise(\n    //     resolve => setTimeout(resolve, ms)\n    // );\n    // await delay(300)\n    if (data) {\n      if (data.friend == string) {\n        console.log(data);\n      }\n      if (data.type == \"init_call\" && data.friend == string) {\n        setup_ui();\n        // console.log(data.message)\n        create_answer(data.message);\n        console.log(\"create_answer\");\n        // console.log(data.message)\n        // console.log(data)\n      }\n\n      if (data.message.type === \"answer\" && data.friend == string) {\n        addAnswer(data.message);\n        console.log(\"add_answer\");\n        console.log(data.message);\n      }\n      if (data.type == \"candidate\" && data.friend == string) {\n        // creating delay hack to ensure that create_answer() sends answer object first via websocket\n        // possible fix:\n        // create system where peer has to accept call and this will ensure time buffer betweem adding Ice Candidates and receiving answer object\n        // answer object must be received before adding any Ice Candidates if not Ice Candidates on peer side will be added to null local description (that will throw error)\n        const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n        await delay(1000);\n        console.log(\"ice tests\");\n        if (peerConnection) {\n          console.log(peerConnection.remoteDescription);\n          peerConnection.addIceCandidate(data.message);\n          console.log(\"addIceCandidate\");\n        }\n      }\n    }\n    let toggle_camera = async () => {\n      let videoTrack = localStream.getTracks().find(track => track.kind === 'video');\n      if (videoTrack.enabled) {\n        videoTrack.enabled = false;\n        document.getElementById('camera_btn').style.backgroundColor = 'rgb(255, 80, 80)';\n      } else {\n        videoTrack.enabled = true;\n        document.getElementById('camera_btn').style.backgroundColor = 'rgb(102, 153, 255, .8)';\n      }\n    };\n    // isCalling(false)\n  };\n\n  useEffect(() => {\n    // if(is_in_call === true)\n    // {\n    //     init_call()\n    // }\n    // else\n    // {\n    //     // Getting UI element    \n    //     let uiNav = document.getElementsByClassName(\"ConControls\")[0];\n    //     // Getting chat element\n    //     let chat = document.getElementsByClassName(\"message_container_chat\")[0];\n    //     let message_list = document.getElementsByClassName(\"message_list\")[0];\n    //     uiNav.style.height = \"auto\";\n    //     chat.style.height = \"auto\";\n    //     message_list.style.height = \"85vh\";\n    // }\n    // // setup_ui()\n\n    setIsVisible(false);\n  }, []);\n\n  // Logic for handling incoming call\n  // if (calling == true)\n  // {\n\n  // if (isFirstCall == true && fcall === true)\n  // {\n  //     isFirstCall = false\n  //     console.log(\"test\")\n  //     // setup_ui()\n  // } \n  // console.log(\"Your friend is calling right now!!!\")\n\n  // Debugging stuff:\n  // console.log(data.message.type)\n  handleCallFromPeer(data);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main_uivideo_con\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ConControls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"ConControls-friendname\",\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"ConControls-Call-icon\",\n        onClick: init_call,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: CallIcon,\n          alt: \"call\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 69\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video_container\",\n      id: \"video_container\",\n      hidden: true,\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        class: \"video-player\",\n        id: \"user-1\",\n        autoPlay: true,\n        playsInline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        class: \"video-player\",\n        id: \"user-2\",\n        autoPlay: true,\n        playsInline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isVisible ? 'visible' : 'hidden',\n      id: \"call_controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"control-container\",\n        id: \"camera_btn\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: CameraIcon,\n          alt: \"camera_btn\",\n          onClick: toggle_camera\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"control-container\",\n        id: \"mic_btn\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: MicIcon,\n          alt: \"microphone_btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"control-container\",\n        id: \"leave_btn\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: PhoneIcon,\n          alt: \"leave_btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 9\n  }, this);\n};\n_s(ConControls, \"7WeJ8Upb3z2DUJFO9+sc3vsccn0=\", false, function () {\n  return [useParams];\n});\n_c = ConControls;\nexport default ConControls;\nvar _c;\n$RefreshReg$(_c, \"ConControls\");","map":{"version":3,"names":["React","useEffect","useContext","useState","useParams","CallIcon","CameraIcon","MicIcon","PhoneIcon","AuthContext","isFirstCall","localStream","remoteStream","peerConnection","count","ConControls","calling","isCalling","data","fcall","username","string","toString","isVisible","setIsVisible","WebSocket","authToken","user","is_in_call","servers","iceServers","urls","setup_ui","console","log","button","document","getElementById","style","visibility","chat","getElementsByClassName","message_list","user1","user2","navigator","mediaDevices","getUserMedia","video","audio","height","srcObject","onloadedmetadata","e","play","init_call","create_offer","createPeerConnection","RTCPeerConnection","MediaStream","getTracks","forEach","track","addTrack","ontrack","streams","onicecandidate","candidate","send","JSON","stringify","offer","createOffer","setLocalDescription","delay","ms","Promise","resolve","setTimeout","create_answer","setRemoteDescription","answer","createAnswer","addAnswer","currentRemoteDescription","handleCallFromPeer","friend","type","message","remoteDescription","addIceCandidate","toggle_camera","videoTrack","find","kind","enabled","backgroundColor"],"sources":["C:/Users/mateu/Desktop/OGNIK/Ognik/frontend/src/components/ConControls.js"],"sourcesContent":["import {React, useEffect, useContext, useState} from 'react'\r\nimport {  useParams } from \"react-router-dom\";\r\nimport CallIcon from \"../assets/phone-call.png\"\r\nimport CameraIcon from \"../assets/camera.png\"\r\nimport MicIcon from \"../assets/mic.png\"\r\nimport PhoneIcon from \"../assets/phone.png\"\r\nimport AuthContext from '../context/AuthContext'\r\n\r\nlet isFirstCall = true\r\nlet localStream;\r\nlet remoteStream;\r\nlet peerConnection\r\nlet count = 1\r\n\r\nconst ConControls = ({calling, isCalling, data = null, fcall}) => {\r\n    // Getting username from URL\r\n    let { username } = useParams();\r\n    let string = username.toString();\r\n\r\n    const [isVisible, setIsVisible] = useState(false);\r\n\r\n    // Getting access to authToken and WebSocket info from AuthContext\r\n    let { WebSocket, authToken, user} = useContext(AuthContext)\r\n\r\n    // !!! prop for sending ice can using webSockets !!!\r\n    \r\n    // WebSocket.send(JSON.stringify({\r\n    //     'message': 'message was sent',\r\n    //     'friendName': string,\r\n    //     'type': 'init_call',\r\n    // }))\r\n\r\n\r\n    let is_in_call = false;\r\n\r\n    const servers = \r\n    {\r\n        iceServers:[\r\n            {\r\n                urls:['stun:stun.l.google.com:19302', 'stun:stun2.l.google.com:19302']\r\n            }\r\n        ]\r\n    } \r\n    \r\n\r\n    let setup_ui = async () => {\r\n        console.log(\"test1\")\r\n        // Getting UI element    \r\n        // let callBTN = document.getElementById(\"call-controls\");\r\n        let button = document.getElementById(\"ConControls-Call-icon\");\r\n        button.style.visibility = \"hidden\";\r\n        // Getting chat element\r\n        let chat = document.getElementsByClassName(\"message_container_chat\")[0];\r\n        let message_list = document.getElementsByClassName(\"message_list\")[0];\r\n        \r\n        // Getting video elemnt\r\n        let user1 = document.getElementById('user-1');\r\n        let user2 = document.getElementById('user-2');\r\n\r\n        // Getting permisson from the user\r\n        localStream = await navigator.mediaDevices.getUserMedia({video: true, audio: true}); // getting problem here\r\n\r\n        console.log('test2')\r\n        // Setting up video container style\r\n        // callBTN.style.display = 'visible';\r\n        user1.style.visibility = 'visible';\r\n        user1.style.height = \"100%\";\r\n        user2.style.visibility = 'visible';\r\n        user2.style.height = \"100%\";\r\n        setIsVisible(true)\r\n        // Setting up src stream for user 1\r\n        user1.srcObject = localStream;\r\n        \r\n        user1.onloadedmetadata = function(e) {\r\n            user1.play();\r\n        };\r\n\r\n        // uiNav.style.height = \"50vh\";\r\n        // chat.style.height = \"45vh\";\r\n        message_list.style.height = \"50vh\";\r\n\r\n        is_in_call = true;\r\n    }\r\n\r\n    // Changing layout of website\r\n    let init_call = async () =>\r\n    {\r\n        setup_ui()\r\n\r\n        create_offer()\r\n        \r\n        // alert(\"ended\");\r\n    }\r\n\r\n    let createPeerConnection = async () => {\r\n        // Creating connection object\r\n        peerConnection = new RTCPeerConnection(servers)\r\n\r\n        // Creating friend's stream object\r\n        remoteStream = new MediaStream()\r\n        // Setting html video object to friend's stream\r\n        document.getElementById('user-2').srcObject = remoteStream;\r\n\r\n        if(!localStream){\r\n            localStream = await navigator.mediaDevices.getUserMedia({video:true, audio:false})\r\n            document.getElementById('user-1').srcObject = localStream\r\n        }\r\n\r\n        // For every track, tracks are added to localStream (user's stream)\r\n        localStream.getTracks().forEach((track) => {\r\n            peerConnection.addTrack(track, localStream)\r\n        })\r\n\r\n        // For every track from friend's peer connection, tracks are added to remoteStream (Friend's stream)\r\n        peerConnection.ontrack = (e) => {\r\n            e.streams[0].getTracks().forEach((track) => {\r\n                remoteStream.addTrack(track)\r\n            })\r\n        }\r\n\r\n        // Debuging\r\n        peerConnection.onicecandidate = async (e) => {\r\n            if(e.candidate){\r\n                // console.log('New ICE candidate: ', e.candidate)\r\n                WebSocket.send(JSON.stringify({\r\n                    'message': e.candidate,\r\n                    'friendName': string,\r\n                    'type': 'candidate',\r\n                }))\r\n            }\r\n        }\r\n    }\r\n\r\n    let create_offer = async () => \r\n    {\r\n        await createPeerConnection()\r\n\r\n        let offer = await peerConnection.createOffer()\r\n        // sets local descirpiton and also fires of peerConnection.onicecandidate listener\r\n        await peerConnection.setLocalDescription(offer)\r\n\r\n        const delay = ms => new Promise(\r\n            resolve => setTimeout(resolve, ms)\r\n        );\r\n        await delay(200)\r\n\r\n        WebSocket.send(JSON.stringify({\r\n            'message': offer,\r\n            'friendName': string,\r\n            'type': 'init_call',\r\n        }))\r\n        // console.log('Offer: ', offer)\r\n        // console.log(peerConnection)\r\n    }\r\n\r\n    let create_answer = async (offer) => {\r\n        await createPeerConnection()\r\n\r\n        await peerConnection.setRemoteDescription(offer)\r\n\r\n        let answer = await peerConnection.createAnswer()\r\n        await peerConnection.setLocalDescription(answer)\r\n\r\n        // console.log(string)\r\n        console.log(\"asnwer: |\")\r\n        console.log(answer)\r\n        // creating delay to ensure that aswer is created before sending message\r\n        // if not first init of the call wont work :( (I have absolutely no idea how to fix this)\r\n        const delay = ms => new Promise(\r\n            resolve => setTimeout(resolve, ms)\r\n        );\r\n        await delay(400)\r\n        WebSocket.send(JSON.stringify({\r\n            'message': answer,\r\n            'friendName': string,\r\n            'type': 'answer',\r\n        }))\r\n\r\n    }\r\n\r\n    let addAnswer = async (answer) => {\r\n        console.log(\"tests: \")\r\n        console.log(peerConnection)\r\n        if (!peerConnection.currentRemoteDescription) {\r\n            // console.log(peerConnection) // Here is problem. undefined\r\n            console.log(peerConnection.currentRemoteDescription)\r\n            // count++\r\n            await peerConnection.setRemoteDescription(answer);\r\n        }\r\n      };\r\n\r\n    let handleCallFromPeer = async (data) => {\r\n        // quick delay hack (not working in this case :( i hate life )\r\n        // const delay = ms => new Promise(\r\n        //     resolve => setTimeout(resolve, ms)\r\n        // );\r\n        // await delay(300)\r\n        if (data)\r\n        {\r\n            if (data.friend == string)\r\n            {\r\n                console.log(data)\r\n            }\r\n            if (data.type == \"init_call\" && data.friend == string)\r\n            {\r\n                setup_ui()\r\n                // console.log(data.message)\r\n                create_answer(data.message)\r\n                console.log(\"create_answer\")\r\n                // console.log(data.message)\r\n                // console.log(data)\r\n            }\r\n            \r\n            if (data.message.type === \"answer\" && data.friend == string)\r\n            {\r\n                addAnswer(data.message)\r\n                console.log(\"add_answer\")\r\n                console.log(data.message)\r\n            }\r\n            \r\n            if (data.type == \"candidate\" && data.friend == string)\r\n            {\r\n                // creating delay hack to ensure that create_answer() sends answer object first via websocket\r\n                // possible fix:\r\n                // create system where peer has to accept call and this will ensure time buffer betweem adding Ice Candidates and receiving answer object\r\n                // answer object must be received before adding any Ice Candidates if not Ice Candidates on peer side will be added to null local description (that will throw error)\r\n                const delay = ms => new Promise(\r\n                    resolve => setTimeout(resolve, ms)\r\n                );\r\n                await delay(1000)\r\n                console.log(\"ice tests\")\r\n                if(peerConnection){\r\n                    console.log(peerConnection.remoteDescription)\r\n                    peerConnection.addIceCandidate(data.message)\r\n\r\n                    console.log(\"addIceCandidate\")\r\n                }\r\n            }\r\n        }\r\n\r\n        let toggle_camera = async () => {\r\n            let videoTrack = localStream.getTracks().find(track => track.kind === 'video')\r\n\r\n            if (videoTrack.enabled)\r\n            {\r\n                videoTrack.enabled = false\r\n                document.getElementById('camera_btn').style.backgroundColor = 'rgb(255, 80, 80)'\r\n            }\r\n            else\r\n            {\r\n                videoTrack.enabled = true\r\n                document.getElementById('camera_btn').style.backgroundColor = 'rgb(102, 153, 255, .8)'\r\n            }\r\n        }\r\n        // isCalling(false)\r\n    }\r\n\r\n    useEffect(()=> {\r\n        // if(is_in_call === true)\r\n        // {\r\n        //     init_call()\r\n        // }\r\n        // else\r\n        // {\r\n        //     // Getting UI element    \r\n        //     let uiNav = document.getElementsByClassName(\"ConControls\")[0];\r\n        //     // Getting chat element\r\n        //     let chat = document.getElementsByClassName(\"message_container_chat\")[0];\r\n        //     let message_list = document.getElementsByClassName(\"message_list\")[0];\r\n        //     uiNav.style.height = \"auto\";\r\n        //     chat.style.height = \"auto\";\r\n        //     message_list.style.height = \"85vh\";\r\n        // }\r\n        // // setup_ui()\r\n\r\n        setIsVisible(false)\r\n    }, [])\r\n\r\n    // Logic for handling incoming call\r\n    // if (calling == true)\r\n    // {\r\n     \r\n        // if (isFirstCall == true && fcall === true)\r\n        // {\r\n        //     isFirstCall = false\r\n        //     console.log(\"test\")\r\n        //     // setup_ui()\r\n        // } \r\n        // console.log(\"Your friend is calling right now!!!\")\r\n        \r\n        // Debugging stuff:\r\n        // console.log(data.message.type)\r\n        handleCallFromPeer(data)\r\n    // }\r\n    \r\n    return (\r\n        <div className='main_uivideo_con'>\r\n            <div className='ConControls'>\r\n                <div id='ConControls-friendname'>{username}</div>\r\n                <div id='ConControls-Call-icon' onClick={init_call}><img src={CallIcon} alt=\"call\"/></div>\r\n            </div>\r\n            <div className='video_container' id='video_container' hidden>\r\n                <video class=\"video-player\" id='user-1' autoPlay playsInline ></video>\r\n                <video class=\"video-player\" id='user-2' autoPlay playsInline ></video>\r\n            </div>\r\n            <div className={isVisible ? 'visible' : 'hidden'} id='call_controls'>\r\n                <div class=\"control-container\" id=\"camera_btn\">\r\n                    <img src={CameraIcon} alt='camera_btn' onClick={toggle_camera}/>\r\n                </div>\r\n                <div class=\"control-container\" id=\"mic_btn\">\r\n                    <img src={MicIcon} alt='microphone_btn' />\r\n                </div>\r\n                <div class=\"control-container\" id=\"leave_btn\">\r\n                    <img src={PhoneIcon} alt='leave_btn' />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConControls"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}