{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mateu\\\\Desktop\\\\OGNIK\\\\Ognik\\\\frontend\\\\src\\\\components\\\\MessageContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport AuthContext from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageContainer = () => {\n  _s();\n  let {\n    username\n  } = useParams();\n  let string = username.toString();\n  let [messages, setMessages] = useState([]);\n  let {\n    chatSocket,\n    authToken,\n    logoutUser\n  } = useContext(AuthContext);\n  let message_status_data = null;\n\n  // functions 'useEffect()' trigges on the first load\n  // and every time 'username' is updated \n  useEffect(() => {\n    getMessages();\n    asgi_connect();\n  }, [username, message_status_data]);\n\n  // getting messages form django backend\n  let getMessages = async () => {\n    let respone = await fetch('http://localhost:8000/users/rooms/' + string, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + String(authToken.access)\n      }\n    }, []);\n    let data = await respone.json();\n    console.log(data);\n    setMessages(data);\n  };\n  let sendMessage = async e => {\n    e.preventDefault();\n    let respone = await fetch('http://localhost:8000/users/rooms/send/' + string, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + String(authToken.access)\n      },\n      body: JSON.stringify(e.target.message.value)\n    });\n    document.getElementById('mess').value = '';\n    chatSocket.send(JSON.stringify({\n      'status': 'Message was sent'\n    }));\n    getMessages();\n  };\n  let asgi_connect = () => {\n    chatSocket.onmessage = function (e) {\n      message_status_data = JSON.parse(e.data);\n      console.log('Data: ', message_status_data);\n      getMessages();\n    };\n  };\n  setTimeout(() => {\n    const input = document.getElementById(\"mess\");\n    input.focus();\n  }, 10);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map(f => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"friends_elem\",\n        children: [f.user.username, \": \", f.body]\n      }, f.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message_text_input\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"mess\",\n          name: \"message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageContainer, \"NP07CfGbGqoQhX+4LA+3StWIQvU=\", false, function () {\n  return [useParams];\n});\n_c = MessageContainer;\nexport default MessageContainer;\nvar _c;\n$RefreshReg$(_c, \"MessageContainer\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useParams","AuthContext","MessageContainer","username","string","toString","messages","setMessages","chatSocket","authToken","logoutUser","message_status_data","getMessages","asgi_connect","respone","fetch","method","headers","String","access","data","json","console","log","sendMessage","e","preventDefault","body","JSON","stringify","target","message","value","document","getElementById","send","onmessage","parse","setTimeout","input","focus","map","f","user","id"],"sources":["C:/Users/mateu/Desktop/OGNIK/Ognik/frontend/src/components/MessageContainer.js"],"sourcesContent":["import React, {useState, useEffect, useContext}  from 'react'\r\nimport {  useParams } from \"react-router-dom\";\r\nimport AuthContext from '../context/AuthContext'\r\n\r\n\r\nconst MessageContainer = () => {\r\n  let { username } = useParams();\r\n  let string = username.toString()\r\n\r\n  let [messages, setMessages] = useState([])\r\n  let {chatSocket, authToken, logoutUser} = useContext(AuthContext)\r\n\r\n  let message_status_data = null\r\n\r\n  // functions 'useEffect()' trigges on the first load\r\n  // and every time 'username' is updated \r\n  useEffect(() => {\r\n    getMessages()\r\n    asgi_connect()\r\n  }, [username, message_status_data])\r\n  \r\n  // getting messages form django backend\r\n  let getMessages = async () => {\r\n    let respone = await fetch('http://localhost:8000/users/rooms/'+string, {\r\n      method: 'GET',\r\n      headers:{\r\n        'Content-Type':'application/json',\r\n        'Authorization':'Bearer ' + String(authToken.access)\r\n      }\r\n    }, [])\r\n    \r\n    let data = await respone.json()\r\n    console.log(data)\r\n    setMessages(data)\r\n  }\r\n  \r\n  let sendMessage = async (e) => {\r\n    e.preventDefault()\r\n    let respone = await fetch('http://localhost:8000/users/rooms/send/'+string, {\r\n      method: 'POST',\r\n      headers:{\r\n        'Content-Type':'application/json',\r\n        'Authorization':'Bearer ' + String(authToken.access)\r\n      }, \r\n      body:JSON.stringify(e.target.message.value)\r\n    })\r\n    document.getElementById('mess').value = ''\r\n    \r\n    chatSocket.send(JSON.stringify({\r\n      'status': 'Message was sent'\r\n    }))\r\n    getMessages()\r\n  }\r\n\r\n  let asgi_connect = () => {\r\n    chatSocket.onmessage = function(e){\r\n      message_status_data = JSON.parse(e.data)\r\n      console.log('Data: ', message_status_data)\r\n      getMessages()\r\n    }\r\n  }\r\n\r\n  setTimeout(() => {\r\n    const input = document.getElementById(\"mess\");\r\n    input.focus();\r\n    }, 10);\r\n\r\n  return (\r\n    <div className='message_container'>\r\n      <h1>{username}</h1>\r\n      <ul>\r\n        {messages.map(f => (\r\n            <div key={f.id}className='friends_elem'>{f.user.username}: {f.body}</div>\r\n        ))}\r\n      </ul>\r\n      <div className='message_text_input'>\r\n        <form onSubmit={sendMessage}>\r\n          <input type=\"text\" id='mess' name=\"message\" />\r\n          <button type=\"submit\">Send</button>\r\n        </form>\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MessageContainer\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7D,SAAUC,SAAS,QAAQ,kBAAkB;AAC7C,OAAOC,WAAW,MAAM,wBAAwB;AAAA;AAGhD,MAAMC,gBAAgB,GAAG,MAAM;EAAA;EAC7B,IAAI;IAAEC;EAAS,CAAC,GAAGH,SAAS,EAAE;EAC9B,IAAII,MAAM,GAAGD,QAAQ,CAACE,QAAQ,EAAE;EAEhC,IAAI,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,IAAI;IAACW,UAAU;IAAEC,SAAS;IAAEC;EAAU,CAAC,GAAGX,UAAU,CAACE,WAAW,CAAC;EAEjE,IAAIU,mBAAmB,GAAG,IAAI;;EAE9B;EACA;EACAb,SAAS,CAAC,MAAM;IACdc,WAAW,EAAE;IACbC,YAAY,EAAE;EAChB,CAAC,EAAE,CAACV,QAAQ,EAAEQ,mBAAmB,CAAC,CAAC;;EAEnC;EACA,IAAIC,WAAW,GAAG,YAAY;IAC5B,IAAIE,OAAO,GAAG,MAAMC,KAAK,CAAC,oCAAoC,GAACX,MAAM,EAAE;MACrEY,MAAM,EAAE,KAAK;MACbC,OAAO,EAAC;QACN,cAAc,EAAC,kBAAkB;QACjC,eAAe,EAAC,SAAS,GAAGC,MAAM,CAACT,SAAS,CAACU,MAAM;MACrD;IACF,CAAC,EAAE,EAAE,CAAC;IAEN,IAAIC,IAAI,GAAG,MAAMN,OAAO,CAACO,IAAI,EAAE;IAC/BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjBb,WAAW,CAACa,IAAI,CAAC;EACnB,CAAC;EAED,IAAII,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAIZ,OAAO,GAAG,MAAMC,KAAK,CAAC,yCAAyC,GAACX,MAAM,EAAE;MAC1EY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAC;QACN,cAAc,EAAC,kBAAkB;QACjC,eAAe,EAAC,SAAS,GAAGC,MAAM,CAACT,SAAS,CAACU,MAAM;MACrD,CAAC;MACDQ,IAAI,EAACC,IAAI,CAACC,SAAS,CAACJ,CAAC,CAACK,MAAM,CAACC,OAAO,CAACC,KAAK;IAC5C,CAAC,CAAC;IACFC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAACF,KAAK,GAAG,EAAE;IAE1CxB,UAAU,CAAC2B,IAAI,CAACP,IAAI,CAACC,SAAS,CAAC;MAC7B,QAAQ,EAAE;IACZ,CAAC,CAAC,CAAC;IACHjB,WAAW,EAAE;EACf,CAAC;EAED,IAAIC,YAAY,GAAG,MAAM;IACvBL,UAAU,CAAC4B,SAAS,GAAG,UAASX,CAAC,EAAC;MAChCd,mBAAmB,GAAGiB,IAAI,CAACS,KAAK,CAACZ,CAAC,CAACL,IAAI,CAAC;MACxCE,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEZ,mBAAmB,CAAC;MAC1CC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EAED0B,UAAU,CAAC,MAAM;IACf,MAAMC,KAAK,GAAGN,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;IAC7CK,KAAK,CAACC,KAAK,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAER,oBACE;IAAK,SAAS,EAAC,mBAAmB;IAAA,wBAChC;MAAA,UAAKrC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAM,eACnB;MAAA,UACGG,QAAQ,CAACmC,GAAG,CAACC,CAAC,iBACX;QAAe,SAAS,EAAC,cAAc;QAAA,WAAEA,CAAC,CAACC,IAAI,CAACxC,QAAQ,EAAC,IAAE,EAACuC,CAAC,CAACf,IAAI;MAAA,GAAxDe,CAAC,CAACE,EAAE;QAAA;QAAA;QAAA;MAAA,QACjB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC,eACL;MAAK,SAAS,EAAC,oBAAoB;MAAA,uBACjC;QAAM,QAAQ,EAAEpB,WAAY;QAAA,wBAC1B;UAAO,IAAI,EAAC,MAAM;UAAC,EAAE,EAAC,MAAM;UAAC,IAAI,EAAC;QAAS;UAAA;UAAA;UAAA;QAAA,QAAG,eAC9C;UAAQ,IAAI,EAAC,QAAQ;UAAA,UAAC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA;IAC9B;MAAA;MAAA;MAAA;IAAA,QACH;EAAA;IAAA;IAAA;IAAA;EAAA,QAEF;AAEV,CAAC;AAAA,GA/EKtB,gBAAgB;EAAA,QACDF,SAAS;AAAA;AAAA,KADxBE,gBAAgB;AAiFtB,eAAeA,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}