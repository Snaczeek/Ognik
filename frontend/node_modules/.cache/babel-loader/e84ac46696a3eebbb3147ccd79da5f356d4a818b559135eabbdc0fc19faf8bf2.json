{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mateu\\\\Desktop\\\\OGNIK\\\\Ognik\\\\frontend\\\\src\\\\components\\\\ConControls.js\",\n  _s = $RefreshSig$();\nimport { React, useEffect, useContext } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport CallIcon from \"../assets/phone-call.png\";\nimport AuthContext from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isFirstCall = true;\nlet localStream;\nlet remoteStream;\nlet peerConnection;\nlet count = 1;\nlet is_in_call = false;\nconst ConControls = _ref => {\n  _s();\n  let {\n    calling,\n    isCalling,\n    data,\n    fcall\n  } = _ref;\n  console.log(is_in_call);\n  // Getting username from URL\n  let {\n    username\n  } = useParams();\n  let string = username.toString();\n\n  // Getting access to authToken and WebSocket info from AuthContext\n  let {\n    WebSocket,\n    authToken,\n    user\n  } = useContext(AuthContext);\n\n  // !!! prop for sending ice can using webSockets !!!\n\n  // WebSocket.send(JSON.stringify({\n  //     'message': 'message was sent',\n  //     'friendName': string,\n  //     'type': 'init_call',\n  // }))\n\n  const servers = {\n    iceServers: [{\n      urls: ['stun:stun.l.google.com:19302']\n    }]\n  };\n  let setup_ui = async () => {\n    console.log(\"testststststststs\");\n    // Getting UI element    \n    let uiNav = document.getElementsByClassName(\"ConControls\")[0];\n    // Getting chat element\n    let chat = document.getElementsByClassName(\"message_container_chat\")[0];\n    let message_list = document.getElementsByClassName(\"message_list\")[0];\n\n    // Getting video elemnt\n    let user1 = document.getElementById('user-1');\n    let user2 = document.getElementById('user-2');\n\n    // Getting permisson from the user\n    localStream = await navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    });\n\n    // Setting up video container style\n    user1.style.visibility = 'visible';\n    user1.style.height = \"100%\";\n    user2.style.visibility = 'visible';\n    user2.style.height = \"100%\";\n\n    // Setting up src stream for user 1\n    user1.srcObject = localStream;\n    user1.onloadedmetadata = function (e) {\n      user1.play();\n    };\n\n    // uiNav.style.height = \"50vh\";\n    // chat.style.height = \"45vh\";\n    message_list.style.height = \"50vh\";\n    is_in_call = true;\n  };\n\n  // Changing layout of website\n  let init_call = async () => {\n    setup_ui();\n    create_offer();\n    alert(\"ended\");\n  };\n  let createPeerConnection = async () => {\n    // Creating connection object\n    peerConnection = new RTCPeerConnection(servers);\n\n    // Creating friend's stream object\n    remoteStream = new MediaStream();\n    // Setting html video object to friend's stream\n    document.getElementById('user-2').srcObject = remoteStream;\n    if (!localStream) {\n      localStream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      document.getElementById('user-1').srcObject = localStream;\n    }\n\n    // For every track, tracks are added to localStream (user's stream)\n    localStream.getTracks().forEach(track => {\n      peerConnection.addTrack(track, localStream);\n    });\n\n    // For every track from friend's peer connection, tracks are added to remoteStream (Friend's stream)\n    peerConnection.ontrack = e => {\n      e.streams[0].getTracks().forEach(track => {\n        remoteStream.addTrack(track);\n      });\n    };\n\n    // Debuging\n    peerConnection.onicecandidate = async e => {\n      if (e.candidate) {\n        // console.log('New ICE candidate: ', e.candidate)\n        WebSocket.send(JSON.stringify({\n          'message': e.candidate,\n          'friendName': string,\n          'type': 'candidate'\n        }));\n      }\n    };\n  };\n  let create_offer = async () => {\n    await createPeerConnection();\n    let offer = await peerConnection.createOffer();\n    await peerConnection.setLocalDescription(offer);\n    WebSocket.send(JSON.stringify({\n      'message': offer,\n      'friendName': string,\n      'type': 'init_call'\n    }));\n    // console.log('Offer: ', offer)\n    // console.log(peerConnection)\n  };\n\n  let create_answer = async offer => {\n    await createPeerConnection();\n    await peerConnection.setRemoteDescription(offer);\n    let answer = await peerConnection.createAnswer();\n    await peerConnection.setLocalDescription(answer);\n\n    // console.log(string)\n\n    console.log(answer);\n    WebSocket.send(JSON.stringify({\n      'message': answer,\n      'friendName': string,\n      'type': 'answer'\n    }));\n  };\n  let addAnswer = async answer => {\n    // console.log(\"tests: \")\n    // console.log(peerConnection)\n    if (!peerConnection.currentRemoteDescription) {\n      // console.log(peerConnection) // Here is problem. undefined\n      console.log(peerConnection.currentRemoteDescription);\n      // count++\n      await peerConnection.setRemoteDescription(answer);\n      console.log(peerConnection.currentRemoteDescription);\n    }\n  };\n  let handleCallFromPeer = async data => {\n    // quick delay hack (not working in this case :( i hate life )\n    const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n    await delay(300);\n    if (data.message.type === \"offer\") {\n      create_answer(data.message);\n      console.log(\"create_answer\");\n      // console.log(data.message)\n      // console.log(data)\n    }\n\n    if (data.message.type === \"answer\") {\n      addAnswer(data.message);\n      console.log(\"add_answer\");\n      // console.log(data.message)\n    }\n\n    if (data.message.type === \"candidate\") {\n      if (peerConnection) {\n        peerConnection.addIceCandidate(data.message);\n        console.log(\"addIceCandidate\");\n      }\n    }\n    isCalling(false);\n  };\n  useEffect(() => {\n    if (is_in_call === true) {\n      init_call();\n    } else {\n      // Getting UI element    \n      let uiNav = document.getElementsByClassName(\"ConControls\")[0];\n      // Getting chat element\n      let chat = document.getElementsByClassName(\"message_container_chat\")[0];\n      let message_list = document.getElementsByClassName(\"message_list\")[0];\n      uiNav.style.height = \"auto\";\n      chat.style.height = \"auto\";\n      message_list.style.height = \"85vh\";\n    }\n  });\n\n  // Logic for handling incoming call\n  if (calling == true) {\n    // if (is_in_call === false)\n    // {\n    isFirstCall = false;\n    console.log(\"test\");\n    setup_ui();\n    // } \n    // console.log(\"Your friend is calling right now!!!\")\n\n    // Debugging stuff:\n    // console.log(data.message.type)\n    handleCallFromPeer(data);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main_uivideo_con\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ConControls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"ConControls-friendname\",\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"ConControls-Call-icon\",\n        onClick: init_call,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: CallIcon,\n          alt: \"call\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 69\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video_container\",\n      hidden: true,\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        class: \"video-player\",\n        id: \"user-1\",\n        autoPlay: true,\n        playsInline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        class: \"video-player\",\n        id: \"user-2\",\n        autoPlay: true,\n        playsInline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 9\n  }, this);\n};\n_s(ConControls, \"wRsBUVphty9jsNXoUi8lWZzvOqQ=\", false, function () {\n  return [useParams];\n});\n_c = ConControls;\nexport default ConControls;\nvar _c;\n$RefreshReg$(_c, \"ConControls\");","map":{"version":3,"names":["React","useEffect","useContext","useParams","CallIcon","AuthContext","isFirstCall","localStream","remoteStream","peerConnection","count","is_in_call","ConControls","calling","isCalling","data","fcall","console","log","username","string","toString","WebSocket","authToken","user","servers","iceServers","urls","setup_ui","uiNav","document","getElementsByClassName","chat","message_list","user1","getElementById","user2","navigator","mediaDevices","getUserMedia","video","audio","style","visibility","height","srcObject","onloadedmetadata","e","play","init_call","create_offer","alert","createPeerConnection","RTCPeerConnection","MediaStream","getTracks","forEach","track","addTrack","ontrack","streams","onicecandidate","candidate","send","JSON","stringify","offer","createOffer","setLocalDescription","create_answer","setRemoteDescription","answer","createAnswer","addAnswer","currentRemoteDescription","handleCallFromPeer","delay","ms","Promise","resolve","setTimeout","message","type","addIceCandidate"],"sources":["C:/Users/mateu/Desktop/OGNIK/Ognik/frontend/src/components/ConControls.js"],"sourcesContent":["import {React, useEffect, useContext} from 'react'\r\nimport {  useParams } from \"react-router-dom\";\r\nimport CallIcon from \"../assets/phone-call.png\"\r\nimport AuthContext from '../context/AuthContext'\r\n\r\nlet isFirstCall = true\r\nlet localStream;\r\nlet remoteStream;\r\nlet peerConnection\r\nlet count = 1\r\nlet is_in_call = false;\r\n\r\nconst ConControls = ({calling, isCalling, data, fcall}) => {\r\n    console.log(is_in_call)\r\n    // Getting username from URL\r\n    let { username } = useParams();\r\n    let string = username.toString();\r\n\r\n    // Getting access to authToken and WebSocket info from AuthContext\r\n    let { WebSocket, authToken, user} = useContext(AuthContext)\r\n\r\n    // !!! prop for sending ice can using webSockets !!!\r\n    \r\n    // WebSocket.send(JSON.stringify({\r\n    //     'message': 'message was sent',\r\n    //     'friendName': string,\r\n    //     'type': 'init_call',\r\n    // }))\r\n\r\n\r\n\r\n    const servers = \r\n    {\r\n        iceServers:[\r\n            {\r\n                urls:['stun:stun.l.google.com:19302']\r\n            }\r\n        ]\r\n    } \r\n    \r\n\r\n    let setup_ui = async () => {\r\n        console.log(\"testststststststs\")\r\n        // Getting UI element    \r\n        let uiNav = document.getElementsByClassName(\"ConControls\")[0];\r\n        // Getting chat element\r\n        let chat = document.getElementsByClassName(\"message_container_chat\")[0];\r\n        let message_list = document.getElementsByClassName(\"message_list\")[0];\r\n        \r\n        // Getting video elemnt\r\n        let user1 = document.getElementById('user-1');\r\n        let user2 = document.getElementById('user-2');\r\n\r\n        // Getting permisson from the user\r\n        localStream = await navigator.mediaDevices.getUserMedia({video: true, audio: true});\r\n\r\n        // Setting up video container style\r\n        user1.style.visibility = 'visible';\r\n        user1.style.height = \"100%\";\r\n        user2.style.visibility = 'visible';\r\n        user2.style.height = \"100%\";\r\n\r\n        // Setting up src stream for user 1\r\n        user1.srcObject = localStream;\r\n        \r\n        user1.onloadedmetadata = function(e) {\r\n            user1.play();\r\n        };\r\n\r\n        // uiNav.style.height = \"50vh\";\r\n        // chat.style.height = \"45vh\";\r\n        message_list.style.height = \"50vh\";\r\n\r\n        is_in_call = true;\r\n    }\r\n\r\n    // Changing layout of website\r\n    let init_call = async () =>\r\n    {\r\n        setup_ui()\r\n        create_offer()\r\n        \r\n        alert(\"ended\");\r\n    }\r\n\r\n    let createPeerConnection = async () => {\r\n        // Creating connection object\r\n        peerConnection = new RTCPeerConnection(servers)\r\n\r\n        // Creating friend's stream object\r\n        remoteStream = new MediaStream()\r\n        // Setting html video object to friend's stream\r\n        document.getElementById('user-2').srcObject = remoteStream;\r\n\r\n        if(!localStream){\r\n            localStream = await navigator.mediaDevices.getUserMedia({video:true, audio:true})\r\n            document.getElementById('user-1').srcObject = localStream\r\n        }\r\n\r\n        // For every track, tracks are added to localStream (user's stream)\r\n        localStream.getTracks().forEach((track) => {\r\n            peerConnection.addTrack(track, localStream)\r\n        })\r\n\r\n        // For every track from friend's peer connection, tracks are added to remoteStream (Friend's stream)\r\n        peerConnection.ontrack = (e) => {\r\n            e.streams[0].getTracks().forEach((track) => {\r\n                remoteStream.addTrack(track)\r\n            })\r\n        }\r\n\r\n        // Debuging\r\n        peerConnection.onicecandidate = async (e) => {\r\n            if(e.candidate){\r\n                // console.log('New ICE candidate: ', e.candidate)\r\n                WebSocket.send(JSON.stringify({\r\n                    'message': e.candidate,\r\n                    'friendName': string,\r\n                    'type': 'candidate',\r\n                }))\r\n            }\r\n        }\r\n    }\r\n\r\n    let create_offer = async () => \r\n    {\r\n        await createPeerConnection()\r\n\r\n        let offer = await peerConnection.createOffer()\r\n        await peerConnection.setLocalDescription(offer)\r\n\r\n        WebSocket.send(JSON.stringify({\r\n            'message': offer,\r\n            'friendName': string,\r\n            'type': 'init_call',\r\n        }))\r\n        // console.log('Offer: ', offer)\r\n        // console.log(peerConnection)\r\n    }\r\n\r\n    let create_answer = async (offer) => {\r\n        await createPeerConnection()\r\n\r\n        await peerConnection.setRemoteDescription(offer)\r\n\r\n        let answer = await peerConnection.createAnswer()\r\n        await peerConnection.setLocalDescription(answer)\r\n\r\n        // console.log(string)\r\n        \r\n        console.log(answer)\r\n        WebSocket.send(JSON.stringify({\r\n            'message': answer,\r\n            'friendName': string,\r\n            'type': 'answer',\r\n        }))\r\n\r\n    }\r\n\r\n    let addAnswer = async (answer) => {\r\n        // console.log(\"tests: \")\r\n        // console.log(peerConnection)\r\n        if (!peerConnection.currentRemoteDescription) {\r\n            // console.log(peerConnection) // Here is problem. undefined\r\n            console.log(peerConnection.currentRemoteDescription)\r\n            // count++\r\n            await peerConnection.setRemoteDescription(answer);\r\n            console.log(peerConnection.currentRemoteDescription)\r\n        }\r\n      };\r\n\r\n    let handleCallFromPeer = async (data) => {\r\n        // quick delay hack (not working in this case :( i hate life )\r\n        const delay = ms => new Promise(\r\n            resolve => setTimeout(resolve, ms)\r\n        );\r\n        await delay(300)\r\n        \r\n        if (data.message.type === \"offer\")\r\n        {\r\n            create_answer(data.message)\r\n            console.log(\"create_answer\")\r\n            // console.log(data.message)\r\n            // console.log(data)\r\n        }\r\n\r\n        if (data.message.type === \"answer\")\r\n        {\r\n            addAnswer(data.message)\r\n            console.log(\"add_answer\")\r\n            // console.log(data.message)\r\n        }\r\n\r\n        if (data.message.type === \"candidate\")\r\n        {\r\n            if(peerConnection){\r\n                peerConnection.addIceCandidate(data.message)\r\n                console.log(\"addIceCandidate\")\r\n            }\r\n        }\r\n\r\n        isCalling(false)\r\n    }\r\n\r\n    useEffect(()=> {\r\n        if(is_in_call === true)\r\n        {\r\n            init_call()\r\n        }\r\n        else\r\n        {\r\n            // Getting UI element    \r\n            let uiNav = document.getElementsByClassName(\"ConControls\")[0];\r\n            // Getting chat element\r\n            let chat = document.getElementsByClassName(\"message_container_chat\")[0];\r\n            let message_list = document.getElementsByClassName(\"message_list\")[0];\r\n            uiNav.style.height = \"auto\";\r\n            chat.style.height = \"auto\";\r\n            message_list.style.height = \"85vh\";\r\n        }\r\n    })\r\n\r\n    // Logic for handling incoming call\r\n    if (calling == true)\r\n    {\r\n     \r\n        // if (is_in_call === false)\r\n        // {\r\n            isFirstCall = false\r\n            console.log(\"test\")\r\n            setup_ui()\r\n        // } \r\n        // console.log(\"Your friend is calling right now!!!\")\r\n        \r\n        // Debugging stuff:\r\n        // console.log(data.message.type)\r\n        handleCallFromPeer(data)\r\n    }\r\n    \r\n    return (\r\n        <div className='main_uivideo_con'>\r\n            <div className='ConControls'>\r\n                <div id='ConControls-friendname'>{username}</div>\r\n                <div id='ConControls-Call-icon' onClick={init_call}><img src={CallIcon} alt=\"call\"/></div>\r\n            </div>\r\n                <div className='video_container' hidden>\r\n                    <video class=\"video-player\" id='user-1' autoPlay playsInline ></video>\r\n                    <video class=\"video-player\" id='user-2' autoPlay playsInline ></video>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConControls"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}