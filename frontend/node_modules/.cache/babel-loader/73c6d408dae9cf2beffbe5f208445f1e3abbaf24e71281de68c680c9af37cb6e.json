{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mateu\\\\Desktop\\\\OGNIK\\\\Ognik\\\\frontend\\\\src\\\\components\\\\MessageContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\nimport { useParams } from \"react-router-dom\";\nimport AuthContext from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageContainer = () => {\n  _s();\n  let {\n    username\n  } = useParams();\n  let string = username.toString();\n  let [messages, setMessages] = useState([]);\n  let {\n    chatSocket,\n    authToken\n  } = useContext(AuthContext);\n\n  // functions 'useEffect()' trigges on the first load\n  // and every time 'username' is updated \n  useEffect(() => {\n    // Connecting to django web socket \n    // Passing url with acces token for jwt auth\n    getMessages();\n    chatSocket.onopen = () => {\n      console.log('WebSocket Client Connected');\n    };\n    // Listener for upcoming messages from django\n    // I dont think async is required, but who knows \n    chatSocket.onmessage = function (e) {\n      let data = JSON.parse(e.data);\n      // Console logging messages for debugging\n      console.log('Data:', data);\n      if (data.type === 'chat_update') {\n        console.log('chat');\n        // 100ms delay is required, for some bizarre reasons\n        // if there is no delay, getMessages() works every 3rd time\n        setTimeout(() => {\n          getMessages();\n        }, 100);\n      }\n    };\n  }, [username]);\n\n  // Getting messages form django backend\n  let getMessages = async () => {\n    let respone = await fetch('http://localhost:8000/users/rooms/' + string, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + String(authToken.access)\n      }\n    }, []);\n    let data = await respone.json();\n    console.log(data);\n    setMessages(data);\n  };\n\n  // Sending messages to djnago\n  let sendMessage = async e => {\n    // Sending debug message to websocket\n    e.preventDefault();\n    chatSocket.send(JSON.stringify({\n      'message': 'gdfgfd was sent'\n    }));\n    await fetch('http://localhost:8000/users/rooms/send/' + string, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + String(authToken.access)\n      },\n      body: JSON.stringify(e.target.message.value)\n    });\n    document.getElementById('mess').value = '';\n\n    // getMessages() ~~ debugging  stuff\n  };\n\n  setTimeout(() => {\n    const input = document.getElementById(\"mess\");\n    input.focus();\n  }, 10);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map(f => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"friends_elem\",\n        children: [f.user.username, \": \", f.body]\n      }, f.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message_text_input\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"mess\",\n          name: \"message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageContainer, \"FMHU2NBL9G7gvzpifGR7e5y2LYs=\", false, function () {\n  return [useParams];\n});\n_c = MessageContainer;\nexport default MessageContainer;\nvar _c;\n$RefreshReg$(_c, \"MessageContainer\");","map":{"version":3,"names":["React","useState","useEffect","useContext","w3cwebsocket","W3CWebSocket","useParams","AuthContext","MessageContainer","username","string","toString","messages","setMessages","chatSocket","authToken","getMessages","onopen","console","log","onmessage","e","data","JSON","parse","type","setTimeout","respone","fetch","method","headers","String","access","json","sendMessage","preventDefault","send","stringify","body","target","message","value","document","getElementById","input","focus","map","f","user","id"],"sources":["C:/Users/mateu/Desktop/OGNIK/Ognik/frontend/src/components/MessageContainer.js"],"sourcesContent":["import React, {useState, useEffect, useContext}  from 'react'\r\nimport { w3cwebsocket as W3CWebSocket} from 'websocket';\r\nimport {  useParams } from \"react-router-dom\";\r\nimport AuthContext from '../context/AuthContext'\r\n\r\n\r\nconst MessageContainer = () => {\r\n  let { username } = useParams();\r\n  let string = username.toString()\r\n\r\n  let [messages, setMessages] = useState([])\r\n  let {chatSocket, authToken} = useContext(AuthContext)\r\n  \r\n  // functions 'useEffect()' trigges on the first load\r\n  // and every time 'username' is updated \r\n  useEffect(() => {\r\n    // Connecting to django web socket \r\n    // Passing url with acces token for jwt auth\r\n    getMessages()\r\n    chatSocket.onopen = () => {\r\n      console.log('WebSocket Client Connected');\r\n    }\r\n    // Listener for upcoming messages from django\r\n    // I dont think async is required, but who knows \r\n    chatSocket.onmessage = function (e) {\r\n      let data = JSON.parse(e.data)\r\n      // Console logging messages for debugging\r\n      console.log('Data:', data)\r\n      if(data.type === 'chat_update'){\r\n        console.log('chat')\r\n        // 100ms delay is required, for some bizarre reasons\r\n        // if there is no delay, getMessages() works every 3rd time\r\n        setTimeout(() => {\r\n          getMessages()\r\n        }, 100);\r\n      }\r\n    }\r\n    \r\n  }, [username])\r\n  \r\n  // Getting messages form django backend\r\n  let getMessages = async () => {\r\n    let respone = await fetch('http://localhost:8000/users/rooms/'+string, {\r\n      method: 'GET',\r\n      headers:{\r\n        'Content-Type':'application/json',\r\n        'Authorization':'Bearer ' + String(authToken.access)\r\n      }\r\n    }, [])\r\n    \r\n    let data = await respone.json()\r\n    console.log(data)\r\n    setMessages(data)\r\n  }\r\n  \r\n  // Sending messages to djnago\r\n  let sendMessage = async (e) => {\r\n    // Sending debug message to websocket\r\n    e.preventDefault()\r\n    chatSocket.send(JSON.stringify({\r\n      'message': 'gdfgfd was sent'\r\n    }))\r\n    await fetch('http://localhost:8000/users/rooms/send/'+string, {\r\n      method: 'POST',\r\n      headers:{\r\n        'Content-Type':'application/json',\r\n        'Authorization':'Bearer ' + String(authToken.access)\r\n      }, \r\n      body:JSON.stringify(e.target.message.value)\r\n    })\r\n    document.getElementById('mess').value = ''\r\n    \r\n    // getMessages() ~~ debugging  stuff\r\n  }\r\n\r\n\r\n  setTimeout(() => {\r\n      const input = document.getElementById(\"mess\");\r\n      input.focus();\r\n    }, 10);\r\n\r\n  return (\r\n    <div className='message_container'>\r\n      <h1>{username}</h1>\r\n      <ul>\r\n        {messages.map(f => (\r\n            <div key={f.id}className='friends_elem'>{f.user.username}: {f.body}</div>\r\n        ))}\r\n      </ul>\r\n      <div className='message_text_input'>\r\n        <form onSubmit={sendMessage}>\r\n          <input type=\"text\" id='mess' name=\"message\" />\r\n          <button type=\"submit\">Send</button>\r\n        </form>\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MessageContainer\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}