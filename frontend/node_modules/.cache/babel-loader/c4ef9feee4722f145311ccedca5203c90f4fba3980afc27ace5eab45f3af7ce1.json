{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mateu\\\\Desktop\\\\OGNIK\\\\Ognik\\\\frontend\\\\src\\\\context\\\\FriendContext.js\",\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { createContext, useState, useEffect, useContext } from 'react';\nimport AuthContext from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FriendContext = /*#__PURE__*/createContext();\nexport default FriendContext;\nexport const FriendProvider = _ref => {\n  _s2();\n  var _s = $RefreshSig$();\n  let {\n    children\n  } = _ref;\n  let [friends, setFriends] = useState([]);\n  let {\n    authToken,\n    WebSocket\n  } = useContext(AuthContext);\n  WebSocket.onmessage = _s(e => {\n    _s();\n    let data = JSON.parse(e.data);\n    let [wsdata, setWsdata] = useState(data);\n    console.log(data);\n    // setWsdata(data)\n    console.log(wsdata);\n    if (data.type === \"friendRequest\") {\n      getFriends();\n    }\n  }, \"u77bmH+GrP5BZB+dCEgY8SZE9pE=\");\n  let getFriends = async () => {\n    let response = await fetch('http://localhost:8000/users/friends/', {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + String(authToken.access)\n      }\n    });\n    let data = await response.json();\n    let new_data = [];\n\n    // pushing only username's to new array\n    for (let i = 0; i < data[0].friends.length; i++) {\n      // console.log(\"test: \" + data[0].friends[i].username + \" \" + i);\n      new_data.push(data[0].friends[i].username);\n    }\n    setFriends(new_data);\n  };\n  useEffect(() => {\n    getFriends();\n  }, []);\n  let contextData = {\n    friends: friends,\n    wsdata: wsdata\n  };\n  return /*#__PURE__*/_jsxDEV(FriendContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s2(FriendProvider, \"s7lPWzJPf5fULnF+xtCt1xe0zhg=\");\n_c = FriendProvider;\nvar _c;\n$RefreshReg$(_c, \"FriendProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","AuthContext","FriendContext","FriendProvider","children","friends","setFriends","authToken","WebSocket","onmessage","e","data","JSON","parse","wsdata","setWsdata","console","log","type","getFriends","response","fetch","method","headers","String","access","json","new_data","i","length","push","username","contextData"],"sources":["C:/Users/mateu/Desktop/OGNIK/Ognik/frontend/src/context/FriendContext.js"],"sourcesContent":["import React from 'react'\r\nimport { createContext, useState, useEffect, useContext } from 'react';\r\nimport AuthContext from '../context/AuthContext'\r\n\r\n\r\nconst FriendContext = createContext();\r\n\r\nexport default FriendContext\r\n\r\nexport const FriendProvider = ({children}) => {\r\n    let [friends, setFriends] = useState([])\r\n    let {authToken, WebSocket} = useContext(AuthContext) \r\n    \r\n    WebSocket.onmessage = (e) => {\r\n        let data = JSON.parse(e.data)\r\n        let [wsdata, setWsdata] = useState(data)  \r\n        console.log(data)\r\n        // setWsdata(data)\r\n        console.log(wsdata)\r\n        if(data.type === \"friendRequest\")\r\n        {\r\n            getFriends()\r\n        }\r\n    }\r\n\r\n    let getFriends = async () =>{\r\n        let response = await fetch('http://localhost:8000/users/friends/', {\r\n            method: \"GET\",\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                'Authorization':'Bearer ' + String(authToken.access)\r\n            }\r\n        })\r\n\r\n        let data = await response.json()\r\n        let new_data = []\r\n        \r\n        // pushing only username's to new array\r\n        for (let i = 0; i < data[0].friends.length; i++) {\r\n            // console.log(\"test: \" + data[0].friends[i].username + \" \" + i);\r\n            new_data.push(data[0].friends[i].username)\r\n        }\r\n        setFriends(new_data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getFriends()\r\n    }, [])\r\n\r\n    let contextData = {\r\n        friends:friends,\r\n        wsdata:wsdata\r\n    }\r\n\r\n  return (\r\n    <FriendContext.Provider value={contextData}>\r\n        {children}\r\n    </FriendContext.Provider>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACtE,OAAOC,WAAW,MAAM,wBAAwB;AAAA;AAGhD,MAAMC,aAAa,gBAAGL,aAAa,EAAE;AAErC,eAAeK,aAAa;AAE5B,OAAO,MAAMC,cAAc,GAAG,QAAgB;EAAA;EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC;EACrC,IAAI,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,IAAI;IAACS,SAAS;IAAEC;EAAS,CAAC,GAAGR,UAAU,CAACC,WAAW,CAAC;EAEpDO,SAAS,CAACC,SAAS,MAAIC,CAAC,IAAK;IAAA;IACzB,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,CAAC,CAACC,IAAI,CAAC;IAC7B,IAAI,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAACa,IAAI,CAAC;IACxCK,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;IACjB;IACAK,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACnB,IAAGH,IAAI,CAACO,IAAI,KAAK,eAAe,EAChC;MACIC,UAAU,EAAE;IAChB;EACJ,CAAC;EAED,IAAIA,UAAU,GAAG,YAAW;IACxB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;MAC/DC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAC;QACJ,cAAc,EAAC,kBAAkB;QACjC,eAAe,EAAC,SAAS,GAAGC,MAAM,CAACjB,SAAS,CAACkB,MAAM;MACvD;IACJ,CAAC,CAAC;IAEF,IAAId,IAAI,GAAG,MAAMS,QAAQ,CAACM,IAAI,EAAE;IAChC,IAAIC,QAAQ,GAAG,EAAE;;IAEjB;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjB,IAAI,CAAC,CAAC,CAAC,CAACN,OAAO,CAACwB,MAAM,EAAED,CAAC,EAAE,EAAE;MAC7C;MACAD,QAAQ,CAACG,IAAI,CAACnB,IAAI,CAAC,CAAC,CAAC,CAACN,OAAO,CAACuB,CAAC,CAAC,CAACG,QAAQ,CAAC;IAC9C;IACAzB,UAAU,CAACqB,QAAQ,CAAC;EACxB,CAAC;EAED5B,SAAS,CAAC,MAAM;IACZoB,UAAU,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIa,WAAW,GAAG;IACd3B,OAAO,EAACA,OAAO;IACfS,MAAM,EAACA;EACX,CAAC;EAEH,oBACE,QAAC,aAAa,CAAC,QAAQ;IAAC,KAAK,EAAEkB,WAAY;IAAA,UACtC5B;EAAQ;IAAA;IAAA;IAAA;EAAA,QACY;AAE7B,CAAC;AAAA,IAlDYD,cAAc;AAAA,KAAdA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}