{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mateu\\\\Desktop\\\\OGNIK\\\\Ognik\\\\frontend\\\\src\\\\components\\\\MessageContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport AuthContext from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageContainer = () => {\n  _s();\n  let {\n    username\n  } = useParams();\n  let [messages, setMessages] = useState([]);\n  let {\n    authToken,\n    logoutUser\n  } = useContext(AuthContext);\n\n  // functions 'useEffect()' trigges on the first load \n  useEffect(() => {\n    getMessages();\n  }, []);\n\n  // getting messages form django backend\n  let getMessages = async () => {\n    let respone = await fetch('http://localhost:8000/users/messages/', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + String(authToken.access)\n      }\n    });\n    let data = await respone.json();\n    setMessages(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message_container\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageContainer, \"T5LShBVU+9SyGih8Sb56x5jEQ2I=\", false, function () {\n  return [useParams];\n});\n_c = MessageContainer;\nexport default MessageContainer;\nvar _c;\n$RefreshReg$(_c, \"MessageContainer\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useParams","AuthContext","MessageContainer","username","messages","setMessages","authToken","logoutUser","getMessages","respone","fetch","method","headers","String","access","data","json"],"sources":["C:/Users/mateu/Desktop/OGNIK/Ognik/frontend/src/components/MessageContainer.js"],"sourcesContent":["import React, {useState, useEffect, useContext}  from 'react'\r\nimport {  useParams } from \"react-router-dom\";\r\nimport AuthContext from '../context/AuthContext'\r\n\r\n\r\nconst MessageContainer = () => {\r\n  let { username } = useParams();\r\n\r\n  let [messages, setMessages] = useState([])\r\n  let {authToken, logoutUser} = useContext(AuthContext)\r\n\r\n  // functions 'useEffect()' trigges on the first load \r\n  useEffect(() => {\r\n    getMessages()\r\n  }, [])\r\n\r\n  // getting messages form django backend\r\n  let getMessages = async () => {\r\n    let respone = await fetch('http://localhost:8000/users/messages/', {\r\n      method: 'GET',\r\n      headers:{\r\n        'Content-Type':'application/json',\r\n        'Authorization':'Bearer ' + String(authToken.access)\r\n      }\r\n    })\r\n\r\n    let data = await respone.json()\r\n    setMessages(data)\r\n  }\r\n\r\n  return (\r\n    <div className='message_container'>\r\n      <h1>{username}</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MessageContainer\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7D,SAAUC,SAAS,QAAQ,kBAAkB;AAC7C,OAAOC,WAAW,MAAM,wBAAwB;AAAA;AAGhD,MAAMC,gBAAgB,GAAG,MAAM;EAAA;EAC7B,IAAI;IAAEC;EAAS,CAAC,GAAGH,SAAS,EAAE;EAE9B,IAAI,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,IAAI;IAACS,SAAS;IAAEC;EAAU,CAAC,GAAGR,UAAU,CAACE,WAAW,CAAC;;EAErD;EACAH,SAAS,CAAC,MAAM;IACdU,WAAW,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAIA,WAAW,GAAG,YAAY;IAC5B,IAAIC,OAAO,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;MACjEC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAC;QACN,cAAc,EAAC,kBAAkB;QACjC,eAAe,EAAC,SAAS,GAAGC,MAAM,CAACP,SAAS,CAACQ,MAAM;MACrD;IACF,CAAC,CAAC;IAEF,IAAIC,IAAI,GAAG,MAAMN,OAAO,CAACO,IAAI,EAAE;IAC/BX,WAAW,CAACU,IAAI,CAAC;EACnB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,mBAAmB;IAAA,uBAChC;MAAA,UAAKZ;IAAQ;MAAA;MAAA;MAAA;IAAA;EAAM;IAAA;IAAA;IAAA;EAAA,QACf;AAEV,CAAC;AAAA,GA9BKD,gBAAgB;EAAA,QACDF,SAAS;AAAA;AAAA,KADxBE,gBAAgB;AAgCtB,eAAeA,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}