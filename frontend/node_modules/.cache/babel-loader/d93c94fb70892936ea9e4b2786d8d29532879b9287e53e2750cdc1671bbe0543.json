{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mateu\\\\Desktop\\\\OGNIK\\\\Ognik\\\\frontend\\\\src\\\\components\\\\MessageContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport AuthContext from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageContainer = () => {\n  _s();\n  let {\n    username\n  } = useParams();\n  let string = username.toString();\n  let [messages, setMessages] = useState([]);\n  let {\n    WebSocket,\n    authToken\n  } = useContext(AuthContext);\n  let updates = [];\n  if (localStorage.getItem(\"Updates\") == null) {\n    console.log(\"dzdsz\");\n    localStorage.setItem(\"Updates\", JSON.stringify(updates));\n  }\n  let firsLoad = true;\n\n  // functions 'useEffect()' trigges on the first load\n  // and every time 'username' is updated \n  useEffect(() => {\n    getMessages();\n  }, [username]);\n  WebSocket.onclose = () => {\n    console.log(\"Websocket Client Disconnected\");\n  };\n  WebSocket.onopen = () => {\n    console.log('WebSocket Client Connected');\n  };\n  // Listener for upcoming messages from django\n  // I dont think async is required, but who knows \n  WebSocket.onmessage = function (e) {\n    let data = JSON.parse(e.data);\n    // Console logging messages for debugging\n    // console.log('Data:', data)\n    // If user recives chat_update prompt and is from friend \n    // whos chatroom is open: update messages \n    if (data.type === 'chat_update' && data.friend === string) {\n      // console.log('chat')\n      // 100ms delay is required, for some bizarre reasons\n      // if there is no delay, getMessages() works every 3rd time\n      setTimeout(() => {\n        getMessages();\n      }, 100);\n    } else\n      //if (!updates.includes(data.friend))\n      {\n        let array = JSON.parse(localStorage.getItem(\"Updates\"));\n        if (!array.includes(data.friend)) {\n          pushToStorage(data.friend);\n        }\n      }\n    // console.log(\"test \" + updates)\n  };\n  // Getting messages form django backend\n  let getMessages = async () => {\n    let respone = await fetch('http://localhost:8000/users/rooms/' + string, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + String(authToken.access)\n      }\n    }, []);\n    let data = await respone.json();\n    // console.log(data)\n    setMessages(data);\n  };\n\n  // Sending messages to djnago\n  let sendMessage = async e => {\n    e.preventDefault();\n    // Sending message to websocket\n    // And passing friend name from url\n    WebSocket.send(JSON.stringify({\n      'message': 'message was sent',\n      'friendName': string,\n      'type': 'message_update'\n    }));\n    await fetch('http://localhost:8000/users/rooms/send/' + string, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + String(authToken.access)\n      },\n      body: JSON.stringify(e.target.message.value)\n    });\n    document.getElementById('mess').value = '';\n    getMessages();\n  };\n  function pushToStorage(value) {\n    // Getting values from storage\n    let array = JSON.parse(localStorage.getItem(\"Updates\"));\n    // Adding value to array\n    array.push(value);\n    // Overwrites current session storage with new one\n    localStorage.setItem(\"Updates\", JSON.stringify(array));\n  }\n  setTimeout(() => {\n    const input = document.getElementById(\"mess\");\n    input.focus();\n  }, 10);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map(f => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"friends_elem\",\n        children: [f.user.username, \": \", f.body]\n      }, f.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message_text_input\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"mess\",\n          name: \"message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageContainer, \"xZZl7KOmCbMHYeE3grDPpqjEgng=\", false, function () {\n  return [useParams];\n});\n_c = MessageContainer;\nexport default MessageContainer;\nvar _c;\n$RefreshReg$(_c, \"MessageContainer\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useParams","AuthContext","MessageContainer","username","string","toString","messages","setMessages","WebSocket","authToken","updates","localStorage","getItem","console","log","setItem","JSON","stringify","firsLoad","getMessages","onclose","onopen","onmessage","e","data","parse","type","friend","setTimeout","array","includes","pushToStorage","respone","fetch","method","headers","String","access","json","sendMessage","preventDefault","send","body","target","message","value","document","getElementById","push","input","focus","map","f","user","id"],"sources":["C:/Users/mateu/Desktop/OGNIK/Ognik/frontend/src/components/MessageContainer.js"],"sourcesContent":["import React, {useState, useEffect, useContext}  from 'react'\r\nimport {  useParams } from \"react-router-dom\";\r\nimport AuthContext from '../context/AuthContext'\r\n\r\n\r\nconst MessageContainer = () => {\r\n  let { username } = useParams();\r\n  let string = username.toString()\r\n\r\n  let [messages, setMessages] = useState([]) \r\n  let { WebSocket, authToken} = useContext(AuthContext)\r\n  \r\n  let updates = []\r\n  if (localStorage.getItem(\"Updates\") == null)\r\n  {\r\n    console.log(\"dzdsz\")\r\n    localStorage.setItem(\"Updates\", JSON.stringify(updates))\r\n  } \r\n  \r\n  let firsLoad = true;\r\n\r\n  // functions 'useEffect()' trigges on the first load\r\n  // and every time 'username' is updated \r\n  useEffect(() => {\r\n      getMessages()\r\n  }, [username])\r\n  \r\n  WebSocket.onclose = () => {\r\n    console.log(\"Websocket Client Disconnected\");\r\n  }\r\n\r\n  WebSocket.onopen = () => {\r\n    console.log('WebSocket Client Connected');\r\n  }\r\n  // Listener for upcoming messages from django\r\n  // I dont think async is required, but who knows \r\n  WebSocket.onmessage = function (e) {\r\n    let data = JSON.parse(e.data)\r\n    // Console logging messages for debugging\r\n    // console.log('Data:', data)\r\n    // If user recives chat_update prompt and is from friend \r\n    // whos chatroom is open: update messages \r\n    if(data.type === 'chat_update' && data.friend === string){\r\n      // console.log('chat')\r\n      // 100ms delay is required, for some bizarre reasons\r\n      // if there is no delay, getMessages() works every 3rd time\r\n      setTimeout(() => {\r\n        getMessages()\r\n      }, 100);\r\n    }\r\n    else //if (!updates.includes(data.friend))\r\n    {\r\n      let array = JSON.parse(localStorage.getItem(\"Updates\"))\r\n      if (!array.includes(data.friend)){\r\n        pushToStorage(data.friend);\r\n      }\r\n      \r\n      \r\n    }\r\n    // console.log(\"test \" + updates)\r\n  }\r\n  // Getting messages form django backend\r\n  let getMessages = async () => {\r\n    let respone = await fetch('http://localhost:8000/users/rooms/'+string, {\r\n      method: 'GET',\r\n      headers:{\r\n        'Content-Type':'application/json',\r\n        'Authorization':'Bearer ' + String(authToken.access)\r\n      }\r\n    }, [])\r\n    \r\n    let data = await respone.json()\r\n    // console.log(data)\r\n    setMessages(data)\r\n  }\r\n  \r\n  // Sending messages to djnago\r\n  let sendMessage = async (e) => {\r\n    e.preventDefault()\r\n    // Sending message to websocket\r\n    // And passing friend name from url\r\n    WebSocket.send(JSON.stringify({\r\n      'message': 'message was sent',\r\n      'friendName': string,\r\n      'type': 'message_update',\r\n    }))\r\n    await fetch('http://localhost:8000/users/rooms/send/'+string, {\r\n      method: 'POST',\r\n      headers:{\r\n        'Content-Type':'application/json',\r\n        'Authorization':'Bearer ' + String(authToken.access)\r\n      }, \r\n      body:JSON.stringify(e.target.message.value)\r\n    })\r\n    document.getElementById('mess').value = ''\r\n    \r\n    getMessages()\r\n  }\r\n\r\n  function pushToStorage(value)\r\n  {\r\n    // Getting values from storage\r\n    let array = JSON.parse(localStorage.getItem(\"Updates\"))\r\n    // Adding value to array\r\n    array.push(value)\r\n    // Overwrites current session storage with new one\r\n    localStorage.setItem(\"Updates\", JSON.stringify(array))\r\n  }\r\n\r\n  setTimeout(() => {\r\n      const input = document.getElementById(\"mess\");\r\n      input.focus();\r\n    }, 10);\r\n\r\n  return (\r\n    <div className='message_container'>\r\n      <h1>{username}</h1>\r\n      <ul>\r\n        {messages.map(f => (\r\n            <div key={f.id}className='friends_elem'>{f.user.username}: {f.body}</div>\r\n        ))}\r\n      </ul>\r\n      <div className='message_text_input'>\r\n        <form onSubmit={sendMessage} autoComplete=\"off\">\r\n          <input type=\"text\" id='mess' name=\"message\" />\r\n          <button type=\"submit\">Send</button>\r\n        </form>\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MessageContainer\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}